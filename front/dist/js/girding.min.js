function Girding(){}function Robot(){var t=this;t.robotWrapper=$(".robot-wrapper"),t.tradingOnWrapper=$(".trading-on"),t.tradingStrategyWrapper=$(".trading-strategy"),t.setStrategyWrapper=$(".set-strategy"),t.setRiskWrapper=$(".set-risk-strategy")}Girding.prototype.run=function(){},Girding.prototype.modalRun=function(){var t=this,e=new Array(t.step1,t.stept2);t.moadlDataControl("#modal",e,t.modalCallback())},Girding.prototype.controlPageToggle=function(t,e,r,n){var o=e.length;o<=1||(1==n?(r==o-2&&$(t+" .next-page").text("提交"),0==r&&1<o&&$(t+" .previous-page").removeClass("hidden"),$(t+" .page-index").text((++r).toString())):(r==o-1&&$(t+" .next-page").text("下一页"),1==r&&$(t+" .previous-page").addClass("hidden"),$(t+" .page-index").text((--r).toString())),$(t+" .modal-body").html(e[r]))},Girding.prototype.moadlDataControl=function(e,r,t){var n=this;$(e+" .modal-body").html(r[0]),r.length<=1&&$(e+" .next-page").text("提交"),$(e+" .next-page").click(function(){if(n.modalCallback(),"提交"!=$(this).text()){var t=parseInt($(e+" .page-index").text());n.controlPageToggle(e,r,t,1)}else $(e).modal("hide")}),$(e+" .previous-page").click(function(){var t=parseInt($(e+" .page-index").text());controlPageToggle(e,r,t,-1)}),$(e).on("hidden.bs.modal",function(){$(e+" .page-index").text((0).toString()),r.length<=1?$(e+" .next-page").text("提交"):$(e+" .next-page").text("下一页"),$(e+" .modal-body").html(r[0]),$(e+" .previous-page").addClass("hidden")})},Girding.prototype.modalCallback=function(){alert("提交成功")},$(function(){(new Girding).run()}),Robot.prototype.run=function(){var t=this;t.listenClickRobotEvent(),t.listenCloseRobotEvent(),t.loadstepEvent(),t.listenTradingRobotEvent(),t.listenCreatTradingEvent(),t.listenparameterEven(),t.listenSubmitRobot(),t.runRobotEvent(),t.protectRelieve()},Robot.prototype.initYstepEvent=function(){$(".ystep").setStep(1)},Robot.prototype.loadstepEvent=function(){$(".ystep").loadStep({size:"large",color:"green",steps:[{title:"选择交易对"},{title:"选择交易策略"},{title:"设置策略参数"},{title:"设置风险策略"}]})},Robot.prototype.listenClickRobotEaaavent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),i=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),l=(i.length,0),n=0;$("#create-robot").on("click",function(){0==n?(t.robotWrapper.show(),i[l].show(),n++):(console.log(n),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){console.log("num"),l<=0?l=0:(l--,$("#btnNext").text("下一步")),$(".ystep").prevStep(),console.log("val",i);for(var t=0;t<i.length;t++)l===t?i[t].show():i[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),n=$(".strategy-parameters .trading-parameters .resistance-value").val(),o=$(".strategy-parameters .trading-parameters .support").val(),a=$(".strategy-parameters .trading-parameters .grid-number").val(),s=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(s),$(".set-strategy .strategy-curry .curry").text(s),$(".set-risk-strategy .strategy-curry .curry").text(s),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(n),$(".set-risk-strategy .set-strategy-title .support-level").text(o),$(".set-risk-strategy .set-strategy-title .girding-num").text(a);$(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),console.log("next"),2<=l?($("#btnNext").hide(),$("#btnComplete").show(),l=3):(l++,$("#btnNext").text("下一步")),$(".ystep").nextStep(),$.each(i,function(t,e){l===t?e.show():e.hide()})}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenClickRobotEvent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),i=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),l=0,n=0;$("#create-robot").on("click",function(){0==n?(t.robotWrapper.show(),i[l].show(),n++):(console.log(n),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){console.log("num"),l<=0?l=0:(l--,$("#btnNext").show().text("下一步"),$("#btnComplete").hide()),$(".ystep").prevStep(),console.log("val",i);for(var t=0;t<i.length;t++)l===t?i[t].show():i[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),n=$(".strategy-parameters .trading-parameters .resistance-value").val(),o=$(".strategy-parameters .trading-parameters .support").val(),a=$(".strategy-parameters .trading-parameters .grid-number").val(),s=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(s),$(".set-strategy .strategy-curry .curry").text(s),$(".set-risk-strategy .strategy-curry .curry").text(s),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(n),$(".set-risk-strategy .set-strategy-title .support-level").text(o),$(".set-risk-strategy .set-strategy-title .girding-num").text(a);$(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),2<=l?($("#btnNext").hide(),$("#btnComplete").show(),l=3):(l++,$("#btnNext").text("下一步")),$(".ystep").nextStep(),$.each(i,function(t,e){l===t?e.show():e.hide()})}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenCloseRobotEvent=function(){var t=$(".close-btn"),e=$(".robot-wrapper");t.click(function(){e.hide()})},Robot.prototype.listenCreatTradingEvent=function(){$(".robot-details").on("click",function(){$(".tradingParticulars").show(),$(".tradingShade").show();var t=$(this).parent().parent().attr("data-id");xfzajax.post({url:"/deal/showtradedetail/",data:{robot_id:t},success:function(t){console.log(t)}})})},Robot.prototype.listenTradingRobotEvent=function(){var t=$(".trading-close-btn"),e=$(".tradingParticulars"),r=$(".tradingShade"),n=$(".trading-loading"),o=$(".trading-ending"),a=$(".trading-container"),s=$(".trading-ending-table");t.click(function(){e.hide(),r.hide()}),o.click(function(){a.hide(),s.show(),n.toggleClass("green"),o.toggleClass("green")}),n.click(function(){a.show(),s.hide(),o.toggleClass("green"),n.toggleClass("green")})},Robot.prototype.listenparameterEven=function(){var t=$(".parameter-configuration"),e=$(".parameter-close-btn"),r=$(".allocation"),n=$(".tradingShade");r.click(function(){t.show(),n.show()}),e.click(function(){t.hide(),n.hide()})},Robot.prototype.getAccountInfoEvent=function(){var t=$(".strategy-parameters");id=t.find("select['name='account']").val(),console.log(id)},Robot.prototype.listenClickStragerty=function(){$(".deal-strategy").each(function(t,e){var r=$(e);r.click(function(){r.addClass("active").siblings().removeClass("active")})})},Robot.prototype.listenSubmitRobot=function(){$("#btnComplete ").click(function(){console.log("dafasdf");var t=$(".set-risk-strategy"),e=t.find(".curry").text().split("/"),r=e[0],n=e[1];console.log(r,n);t.find(".user").text();var o=".strategy-parameters-top .strategy".text(),a=t.find(".account-value").text(),s=t.find(".resistance-value").text(),i=t.find(".support-value").text(),l=t.find(".girding-value").text(),c=t.find(".deal-account-free").text(),g=t.find(".girding-profit-value").text();console.log("diaqle"),console.log(o,a,s,i,l,c,g)})},Robot.prototype.runRobotEvent=function(){$("#run-robot").click(function(){var t=$(this).parent().parent().attr("data-id"),e=[];e.push(t),console.log(e),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:e},traditional:!0,success:function(t){200===t.code&&console.log(t)}})})},Robot.prototype.protectRelieve=function(){$(".protect-relieve").on("click",function(){var t=$(this).text();console.log(t);var e=$(this).siblings(),r=$(e[0]).text();if("运行"===r||"运行(保护)"===r)var n="运行";if("停止"===r||"停止(保护)"===r)n="停止";if("保护"===t){var o=r+"("+t+")";console.log(o),$(e[0]).text(o),$(this).text("解除")}else $(e[0]).text(n),$(this).text("保护")})},$(function(){(new Robot).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
