function Girding(){}function Robot(){var t=this;t.robotWrapper=$(".robot-wrapper"),t.tradingOnWrapper=$(".trading-on"),t.tradingStrategyWrapper=$(".trading-strategy"),t.setStrategyWrapper=$(".set-strategy"),t.setRiskWrapper=$(".set-risk-strategy")}Girding.prototype.run=function(){},Girding.prototype.modalRun=function(){var t=this,e=new Array(t.step1,t.stept2);t.moadlDataControl("#modal",e,t.modalCallback())},Girding.prototype.controlPageToggle=function(t,e,r,o){var a=e.length;a<=1||(1==o?(r==a-2&&$(t+" .next-page").text("提交"),0==r&&1<a&&$(t+" .previous-page").removeClass("hidden"),$(t+" .page-index").text((++r).toString())):(r==a-1&&$(t+" .next-page").text("下一页"),1==r&&$(t+" .previous-page").addClass("hidden"),$(t+" .page-index").text((--r).toString())),$(t+" .modal-body").html(e[r]))},Girding.prototype.moadlDataControl=function(e,r,t){var o=this;$(e+" .modal-body").html(r[0]),r.length<=1&&$(e+" .next-page").text("提交"),$(e+" .next-page").click(function(){if(o.modalCallback(),"提交"!=$(this).text()){var t=parseInt($(e+" .page-index").text());o.controlPageToggle(e,r,t,1)}else $(e).modal("hide")}),$(e+" .previous-page").click(function(){var t=parseInt($(e+" .page-index").text());controlPageToggle(e,r,t,-1)}),$(e).on("hidden.bs.modal",function(){$(e+" .page-index").text((0).toString()),r.length<=1?$(e+" .next-page").text("提交"):$(e+" .next-page").text("下一页"),$(e+" .modal-body").html(r[0]),$(e+" .previous-page").addClass("hidden")})},Girding.prototype.modalCallback=function(){alert("提交成功")},$(function(){(new Girding).run()}),Robot.prototype.run=function(){var t=this;t.listenClickRobotEvent(),t.listenCloseRobotEvent(),t.loadstepEvent(),t.listenTradingRobotEvent(),t.listenCreatTradingEvent(),t.listenparameterEven(),t.listenSubmitRobot(),t.runRobotEvent(),t.protectRelieve(),t.getAccountInfoEvent(),t.setCurrentPrice(),t.oneStepRun(),t.editRobotEvent(),t.listenRightFlagEvent(),t.getUser(),t.submitTipsEvent(),t.robotYieldEvent()},Robot.prototype.initYstepEvent=function(){$(".ystep").setStep(1)},Robot.prototype.loadstepEvent=function(){$(".ystep").loadStep({size:"large",color:"green",steps:[{title:"选择交易对"},{title:"选择交易策略"},{title:"设置策略参数"},{title:"设置风险策略"}]})},Robot.prototype.listenClickRobotEvent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),g=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),d=0,o=0;$("#create-robot").on("click",function(){0==o?(t.robotWrapper.show(),g[d].show(),o++):(console.log(o),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){d<=0?d=0:(d--,$("#btnNext").show().text("下一步"),$("#btnComplete").hide()),$(".ystep").prevStep();for(var t=0;t<g.length;t++)d===t?g[t].show():g[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),o=$(".strategy-parameters .trading-parameters .resistance-value").val(),a=$(".support-value").val(),n=$(".strategy-parameters .trading-parameters .grid-number").val(),i=$("#one-girding-free").val(),l=$(".profit-value").text(),s=$(".strategy-parameters .trading-parameters .millisecond-value").val(),c=$(".strategy-parameters .mix-number .mix-number-value  ").val(),u=$(".strategy-parameters  .max-number .max-number-value ").val(),p=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(p),$(".set-strategy .strategy-curry .curry").text(p),$(".set-risk-strategy .strategy-curry .curry").text(p),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(o),$(".set-risk-strategy .set-strategy-title .support-level").text(a),$(".set-risk-strategy .set-strategy-title .girding-num").text(n),$(".strategy-parameters-below .deal-account").text(i+"%"),$(".strategy-parameters-below .resistance").text(l);if(/[\u4e00-\u9fa5]/.test(p))xfzalert.alertError("请选择交易币种/交易名称");else{if($(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),2<=d){if("---请选择---"==r)return void xfzalert.alertError("请选择交易账户");if(""==s.trim())return void xfzalert.alertError("请输入挂单频率");if(""==c.trim())return void xfzalert.alertError("请输入单网格最小交易数量");if(""==u.trim())return void xfzalert.alertError("请输入单网格最大交易数量");$("#btnNext").hide(),$("#btnComplete").show(),d=3}else d++,$("#btnNext").text("下一步");$(".ystep").nextStep(),$.each(g,function(t,e){d===t?e.show():e.hide()})}}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenCloseRobotEvent=function(){var t=$(".close-btn"),e=$(".robot-wrapper");t.click(function(){e.hide()})},Robot.prototype.listenCreatTradingEvent=function(){$(".robot-details").on("click",function(){$(".tradingParticulars").show(),$(".tradingShade").show();var t=$(this).parent().parent().attr("data-id");$("#btnNext1").attr("robot_id",t),xfzajax.post({url:"/deal/showtradedetail/",data:{robot_id:t},success:function(t){var e=t.data,r=e.closed_num,o=e.open_num;$(".deal-opening").text("("+o+")"),$(".deal-completed").text("("+r+")"),console.log(e);var a=template("robot-deal-details",{robots:e});$(".tradingParticulars").append(a)}})})},Robot.prototype.listenTradingRobotEvent=function(){var t=$(".trading-close-btn"),e=$(".tradingParticulars"),r=$(".tradingShade"),o=$(".trading-loading"),a=$(".trading-ending");t.click(function(){e.hide(),r.hide(),window.location.reload()}),a.click(function(){$(".trading-particulars").hide(),$(".trading-ending-table").show(),o.toggleClass("green"),a.toggleClass("green")}),o.click(function(){$(".trading-particulars").show(),$(".trading-ending-table").hide(),a.toggleClass("green"),o.toggleClass("green")})},Robot.prototype.listenparameterEven=function(){var e=$(".parameter-configuration"),t=$(".parameter-close-btn"),r=$(".allocation"),o=$(".tradingShade");r.click(function(){e.show(),o.show();var t=$(this).parent().parent().attr("data-id");$("#btnNext1").attr("robot_id",t),xfzajax.post({url:"/deal/showconfiginfo/",data:{robot_id:t},success:function(t){var e=t.data;console.log(e);var r=template("robots-details",{robots:e});$("#parameter-list-content").append(r)}})}),t.click(function(){e.hide(),o.hide(),window.location.reload()}),$(".prevent-btn").click(function(){e.hide(),o.hide(),window.location.reload()})},Robot.prototype.fomatFloat=function(t,e){var r=parseFloat(t);if(isNaN(r))return!1;var o=(r=Math.round(t*Math.pow(10,e))/Math.pow(10,e)).toString(),a=o.indexOf(".");for(a<0&&(a=o.length,o+=".");o.length<=a+e;)o+="0";return o},Robot.prototype.getAccountInfoEvent=function(){var y=this;$("#robot-account").change(function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],m=t[1],r=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":m,account_id:r},success:function(t){if(200===t.code){var e=t.data;console.log(e);var i=e.resistance,l=e.support_level,r=e.currency,o=e.last,a=e.market,n=e.total_currency.replace(/[^\d.]/g,"");console.log(n);var s=e.total_market.replace(/[^\d.]/g,""),c=o.replace(/[^\d.]/g,"");console.log(c);var u=Number(n)*Number(c)+Number(s);console.log(u),$(".current-price .price").attr("total_money",u.toFixed(2)+m),$(".current-price .price").text(o),$(".account-details .currency").text(r),$(".account-details .market").text(a);var p=$("#stratery-girding-num ").val(),g=$("#one-girding-free").val()/100;console.log("free",g);var d=(i-l)/p;console.log("单网格",d);var f=[d-(2*i+d)*g]/i;console.log("最小",f);var v=(d-(2*l+d)*g)/l;console.log("最da",v);var b=y.fomatFloat(100*f,2)+"%-"+y.fomatFloat(100*v,2)+"%";$(".resistance-value").val(i),$(".support-value").val(l),i<=o&&xfzalert.alertError("阻力位不能小于等于当前价"),$(".profit-value").text(b),$("#stratery-girding-num").on("blur",function(){if(""==!$("#stratery-girding-num").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val()/100,r=(i-l)/t,o=(r-(2*i+r)*e)/i,a=(r-(2*l+r)*e)/l,n=y.fomatFloat(100*o,2)+"%-"+y.fomatFloat(100*a,2)+"%";$(".profit-value").text(n)}}),$("#one-girding-free").on("blur",function(){if(""==!$("#one-girding-free").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val()/100,r=(i-l)/t,o=(r-(2*i+r)*e)/i,a=(r-(2*l+r)*e)/l,n=y.fomatFloat(100*o,2)+"%-"+y.fomatFloat(100*a,2)+"%";$(".profit-value").text(n)}}),$(".support-value").on("blur",function(){console.log("支撑位");var t=$(".resistance-value").val(),e=$(".support-value").val();if(console.log(e,t),""==!e){console.log("wori");var r=$("#stratery-girding-num ").val(),o=$("#one-girding-free").val()/100,a=(t-e)/r,n=(a-(2*t+a)*o)/t,i=(a-(2*e+a)*o)/e,l=y.fomatFloat(100*n,2)+"%-"+y.fomatFloat(100*i,2)+"%";$(".profit-value").text(l),console.log(l)}})}}})})},Robot.prototype.listenClickStragerty=function(){$(".deal-strategy").each(function(t,e){var r=$(e);r.click(function(){r.addClass("active").siblings().removeClass("active")})})},Robot.prototype.listenSubmitRobot=function(){$("#btnComplete ").click(function(){console.log("dafasdf");var t=$(".set-risk-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$(".set-risk-strategy .strategy-title .curry").text();console.log(o);var a=$("#robot-account").find("option:selected").val(),n=$(".current-price .price").attr("total_money");console.log(n);var i=$(".strategy-parameters-top .resistance").text(),l=$(".strategy-parameters-top .support-level").text(),s=$(".strategy-parameters-top .girding-num").text(),c=$(".current-price .price").text().replace(/[^\d.]/g,""),u=$(".millisecond-value").val(),p=$(".mix-number .value ").val(),g=$(".max-number .value ").val();console.log("当前价:",c,"毫秒:",u,"最小数量:",p,"最大数量",g);var d=$(".strategy-parameters-below .deal-account").text(),f=$(".strategy-parameters-below .resistance").text(),v=$(".stopLoss .loss").val(),b=$(".warning .value").val(),m=$(".warninguser .active");console.log(m);for(var y=[],x=0;x<m.length;x++){var h=m[x];console.log(h);var k=$(h).text();console.log($.trim(k)),y+=$.trim(k)+"&"}xfzajax.post({url:"/deal/createrobot/",data:{trading_account:a,currency:e,market:r,trading_strategy:o,total_money:n,float_profit:0,realized_profit:0,total_profit:0,annual_yield:0,protection:1,status:0,run_status:1,current_price:c,orders_frequency:u,resistance:i,support_level:l,girding_num:s,procudere_fee:d,min_num:p,max_num:g,girding_profit:f,stop_price:v,warning_price:b,warning_account:y},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("添加机器人成功",function(){window.location.reload()})}})})},Robot.prototype.runRobotEvent=function(){$(".run-stop").click(function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=$(this).attr("run_status"),o=t.attr("status");console.log(e,r,o),0==r&&1==o?(r=1,o=0):1==r&&0==o?(r=0,o=1):2!=o&&3!=o||$(this).attr("disabled",!0),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:e,flag:o,run_status:r},traditional:!0,success:function(t){200===t.code?xfzalert.alertSuccess("机器人ID:"+e+" 运行成功",function(){window.location.reload()}):xfzalert.alertError("机器人ID: "+e+" 运行失败")}})})},Robot.prototype.setCurrentPrice=function(){$("#set-currenPrice").click(function(){var t=$(".set-price").val();""==!t?$(".current-price .price").text(t):xfzalert.alertError("请输入当前价")})},Robot.prototype.protectRelieve=function(){$(".protect-relieve").on("click",function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=t.attr("status"),o=t.attr("protect");console.log(e,r,o),1==r&&1==o?(r=2,o=0):2==r&&0==o?o=r=1:0==r&&1==o?(r=3,o=0):3==r&&0==o&&(r=0,o=1),console.log("status:"+r,"protect:"+o),xfzajax.post({url:"/deal/robot_protection/",data:{robot_id:e,flag:r,protect:o},success:function(t){console.log(t)}})})},Robot.prototype.editRobotEvent=function(){$("#btnNext1").click(function(){console.log("配置");var t=$(this).attr("robot_id");console.log("robotid",t);var e=$(".edit-mix-num").val(),r=$(".edit-max-numx").val(),o=$(".edit-stoploss").val(),a=$(".edit-waring").val(),n=$(".edit-orders-frequency").val();xfzajax.post({url:"/deal/showconfig/",data:{robot_id:t,min_num:e,max_num:r,stop_price:o,warning_price:a,orders_frequency:n},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("机器人配置成功",function(){window.location.reload()})}})})},Robot.prototype.oneStepRun=function(){$("#one-key-stop").click(function(){var t=$(this).parent().parent(),e=(t.attr("data-id"),$(this).attr("run_status")),r=t.attr("status");0==e&&1==r?(e=1,r=0):1==e&&0==r&&(e=0,r=1),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:"",flag:0},success:function(t){console.log(t)}})}),$("#one-key-run").click(function(){xfzajax.post({url:"/deal/startrobot/",data:{robot_id:"",flag:1},success:function(t){console.log(t)}})})},Robot.prototype.listenRightFlagEvent=function(){$("#btnNext").click(function(){console.log("right"),""==!$(".strategy-curry .currency").text()&&$(".strategy-curry").append('<img src="{% static \'images/1-1.png\' %}" alt="">')})},Robot.prototype.getUser=function(){$("#create-robot").click(function(){xfzajax.get({url:"/deal/waring_usrs/",success:function(t){if(200===t.code){console.log(t);var e=t.data,r=template("users-item",{users:e});$("#waring-users").append(r)}}})})},Robot.prototype.listenCurrencySelecctedEvent=function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":r,account_id:o},success:function(t){if(200===t.code){var e=t.data;console.log(e);var r=e.resistance,o=e.support_level,a=e.currency,n=e.last,i=e.market;$(".current-price .price").text(n),$(".account-details .currency").text(a),$(".account-details .market").text(i);var l=$("#stratery-girding-num ").val(),s=$("#one-girding-free").val(),c=(r-o)/l,u=(c-(2*r+c)*s)/r,p=(c-(2*o+c)*s)/o,g=self.fomatFloat(u,2)+"%-"+self.fomatFloat(p,2)+"%";$(".resistance-value").val(r),$(".support-value").val(o),$(".profit-value").text(g)}}})},Robot.prototype.submitTipsEvent=function(){var c=this;$(".stopLoss .loss").on("blur",function(){var t=$(".strategy-parameters-top .support-level").text(),e=$(".stopLoss .loss").val();console.log(t,e),t<e&&xfzalert.alertError("止损价必须低于支撑位")}),$(".max-number-value").on("blur",function(){var t=$(".max-number-value").val(),e=$(".account-details .currency").text().replace(/[^\d.]/g,""),r=$(".account-details .market").text().replace(/[^\d.]/g,"");console.log("currency:"+e,"market:"+r);var o=$(".support-value").val(),a=$(".resistance-value").val();console.log("支撑位"+o,"阻力位："+a);var n=$("#stratery-girding-num").val(),i=(parseInt(a)+parseInt(o))/2*t*n;console.log("市场价计算："+i);var l=t*n;console.log(l,"交易币种价格"),parseInt(r)<parseInt(i)&&xfzalert.alertError("账户市场币种余额不足"),parseInt(e)<parseInt(l)&&xfzalert.alertError("账户交易币种余额不足"),parseInt(r)<parseInt(i)&&parseInt(e)<parseInt(l)&&xfzalert.alertError("账户市场币种和交易币种余额不足")}),$(".resistance-value").on("blur",function(){var t=$(".resistance-value").val(),e=$(".current-price .price").text(),r=$(".support-value").val();if(""==!t)if(parseInt(t)<=parseInt(e))xfzalert.alertError("阻力位不得低于等于当前价");else{var o=$("#stratery-girding-num ").val(),a=$("#one-girding-free").val()/100,n=(t-r)/o,i=(n-(2*t+n)*a)/t,l=(n-(2*r+n)*a)/r,s=c.fomatFloat(100*i,2)+"%-"+c.fomatFloat(100*l,2)+"%";$(".profit-value").text(s)}})},Robot.prototype.websocketRobot=function(){var e=new WebSocket("ws://"+window.location.host+"/deal/webtask_stu/");e.onopen=function(){console.log("WebSocket open"),e.send("1")},e.onmessage=function(t){console.log(t),console.log("dfa")},e.onclose=function(t){console.log(t),e.close()}},Robot.prototype.robotYieldEvent=function(){xfzajax.post({url:"/deal/robot_yield/",success:function(t){console.log(t)}})},template.defaults.imports.fomat=function(t){return t.toFixed(2)},$(function(){(new Robot).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
