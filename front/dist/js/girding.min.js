function Girding(){}function Robot(){var t=this;t.robotWrapper=$(".robot-wrapper"),t.tradingOnWrapper=$(".trading-on"),t.tradingStrategyWrapper=$(".trading-strategy"),t.setStrategyWrapper=$(".set-strategy"),t.setRiskWrapper=$(".set-risk-strategy")}Girding.prototype.run=function(){},Girding.prototype.modalRun=function(){var t=this,e=new Array(t.step1,t.stept2);t.moadlDataControl("#modal",e,t.modalCallback())},Girding.prototype.controlPageToggle=function(t,e,r,o){var a=e.length;a<=1||(1==o?(r==a-2&&$(t+" .next-page").text("提交"),0==r&&1<a&&$(t+" .previous-page").removeClass("hidden"),$(t+" .page-index").text((++r).toString())):(r==a-1&&$(t+" .next-page").text("下一页"),1==r&&$(t+" .previous-page").addClass("hidden"),$(t+" .page-index").text((--r).toString())),$(t+" .modal-body").html(e[r]))},Girding.prototype.moadlDataControl=function(e,r,t){var o=this;$(e+" .modal-body").html(r[0]),r.length<=1&&$(e+" .next-page").text("提交"),$(e+" .next-page").click(function(){if(o.modalCallback(),"提交"!=$(this).text()){var t=parseInt($(e+" .page-index").text());o.controlPageToggle(e,r,t,1)}else $(e).modal("hide")}),$(e+" .previous-page").click(function(){var t=parseInt($(e+" .page-index").text());controlPageToggle(e,r,t,-1)}),$(e).on("hidden.bs.modal",function(){$(e+" .page-index").text((0).toString()),r.length<=1?$(e+" .next-page").text("提交"):$(e+" .next-page").text("下一页"),$(e+" .modal-body").html(r[0]),$(e+" .previous-page").addClass("hidden")})},Girding.prototype.modalCallback=function(){alert("提交成功")},$(function(){(new Girding).run()}),Robot.prototype.run=function(){var t=this;t.listenClickRobotEvent(),t.listenCloseRobotEvent(),t.loadstepEvent(),t.listenTradingRobotEvent(),t.listenCreatTradingEvent(),t.listenparameterEven(),t.listenSubmitRobot(),t.runRobotEvent(),t.protectRelieve(),t.getAccountInfoEvent(),t.setCurrentPrice(),t.oneStepRun(),t.editRobotEvent(),t.listenRightFlagEvent(),t.getUser(),t.submitTipsEvent()},Robot.prototype.initYstepEvent=function(){$(".ystep").setStep(1)},Robot.prototype.loadstepEvent=function(){$(".ystep").loadStep({size:"large",color:"green",steps:[{title:"选择交易对"},{title:"选择交易策略"},{title:"设置策略参数"},{title:"设置风险策略"}]})},Robot.prototype.listenClickRobotEvent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),g=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),d=0,o=0;$("#create-robot").on("click",function(){0==o?(t.robotWrapper.show(),g[d].show(),o++):(console.log(o),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){d<=0?d=0:(d--,$("#btnNext").show().text("下一步"),$("#btnComplete").hide()),$(".ystep").prevStep();for(var t=0;t<g.length;t++)d===t?g[t].show():g[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),o=$(".strategy-parameters .trading-parameters .resistance-value").val(),a=$(".support-value").val(),n=$(".strategy-parameters .trading-parameters .grid-number").val(),i=$("#one-girding-free").val(),l=$(".profit-value").text(),s=$(".strategy-parameters .trading-parameters .millisecond-value").val(),c=$(".strategy-parameters .mix-number .mix-number-value  ").val(),u=$(".strategy-parameters  .max-number .max-number-value ").val(),p=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(p),$(".set-strategy .strategy-curry .curry").text(p),$(".set-risk-strategy .strategy-curry .curry").text(p),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(o),$(".set-risk-strategy .set-strategy-title .support-level").text(a),$(".set-risk-strategy .set-strategy-title .girding-num").text(n),$(".strategy-parameters-below .deal-account").text(i+"%"),$(".strategy-parameters-below .resistance").text(l);if(/[\u4e00-\u9fa5]/.test(p))xfzalert.alertError("请选择交易币种/交易名称");else{if($(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),2<=d){if("---请选择---"==r)return void xfzalert.alertError("请选择交易账户");if(""==s.trim())return void xfzalert.alertError("请输入挂单频率");if(""==c.trim())return void xfzalert.alertError("请输入单网格最小交易数量");if(""==u.trim())return void xfzalert.alertError("请输入单网格最大交易数量");$("#btnNext").hide(),$("#btnComplete").show(),d=3}else d++,$("#btnNext").text("下一步");$(".ystep").nextStep(),$.each(g,function(t,e){d===t?e.show():e.hide()})}}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenCloseRobotEvent=function(){var t=$(".close-btn"),e=$(".robot-wrapper");t.click(function(){e.hide()})},Robot.prototype.listenCreatTradingEvent=function(){$(".robot-details").on("click",function(){$(".tradingParticulars").show(),$(".tradingShade").show();var t=$(this).parent().parent().attr("data-id");$("#btnNext1").attr("robot_id",t),xfzajax.post({url:"/deal/showtradedetail/",data:{robot_id:t},success:function(t){var e=t.data,r=e.closed_num,o=e.open_num;$(".deal-opening").text("("+o+")"),$(".deal-completed").text("("+r+")"),console.log(e);var a=template("robot-deal-details",{robots:e});$(".tradingParticulars").append(a)}})})},Robot.prototype.listenTradingRobotEvent=function(){var t=$(".trading-close-btn"),e=$(".tradingParticulars"),r=$(".tradingShade"),o=$(".trading-loading"),a=$(".trading-ending");t.click(function(){e.hide(),r.hide(),window.location.reload()}),a.click(function(){$(".trading-particulars").hide(),$(".trading-ending-table").show(),o.toggleClass("green"),a.toggleClass("green")}),o.click(function(){$(".trading-particulars").show(),$(".trading-ending-table").hide(),a.toggleClass("green"),o.toggleClass("green")})},Robot.prototype.listenparameterEven=function(){var e=$(".parameter-configuration"),t=$(".parameter-close-btn"),r=$(".allocation"),o=$(".tradingShade");r.click(function(){e.show(),o.show();var t=$(this).parent().parent().attr("data-id");$("#btnNext1").attr("robot_id",t),xfzajax.post({url:"/deal/showconfiginfo/",data:{robot_id:t},success:function(t){var e=t.data;console.log(e);var r=template("robots-details",{robots:e});$("#parameter-list-content").append(r)}})}),t.click(function(){e.hide(),o.hide(),window.location.reload()}),$(".prevent-btn").click(function(){e.hide(),o.hide(),window.location.reload()})},Robot.prototype.fomatFloat=function(t,e){var r=parseFloat(t);if(isNaN(r))return!1;var o=(r=Math.round(t*Math.pow(10,e))/Math.pow(10,e)).toString(),a=o.indexOf(".");for(a<0&&(a=o.length,o+=".");o.length<=a+e;)o+="0";return o},Robot.prototype.getAccountInfoEvent=function(){var y=this;$("#robot-account").change(function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],m=t[1],r=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":m,account_id:r},success:function(t){if(200===t.code){var e=t.data;console.log(e);var i=e.resistance,l=e.support_level,r=e.currency,o=e.last,a=e.market,n=e.total_currency.replace(/[^\d.]/g,"");console.log(n);var s=e.total_market.replace(/[^\d.]/g,""),c=o.replace(/[^\d.]/g,"");console.log(c);var u=Number(n)*Number(c)+Number(s);console.log(u),$(".current-price .price").attr("total_money",u.toFixed(2)+m),$(".current-price .price").text(o),$(".account-details .currency").text(r),$(".account-details .market").text(a);var p=$("#stratery-girding-num ").val(),g=$("#one-girding-free").val()/100;console.log("free",g);var d=(i-l)/p;console.log("单网格",d);var f=[d-(2*i+d)*g]/i;console.log("最小",f);var v=(d-(2*l+d)*g)/l;console.log("最da",v);var b=y.fomatFloat(100*f,2)+"%-"+y.fomatFloat(100*v,2)+"%";$(".resistance-value").val(i),$(".support-value").val(l),i<=o&&xfzalert.alertError("阻力位不能小于等于当前价"),$(".profit-value").text(b),$("#stratery-girding-num").on("blur",function(){if(""==!$("#stratery-girding-num").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val()/100,r=(i-l)/t,o=(r-(2*i+r)*e)/i,a=(r-(2*l+r)*e)/l,n=y.fomatFloat(100*o,2)+"%-"+y.fomatFloat(100*a,2)+"%";$(".profit-value").text(n)}}),$("#one-girding-free").on("blur",function(){if(""==!$("#one-girding-free").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val()/100,r=(i-l)/t,o=(r-(2*i+r)*e)/i,a=(r-(2*l+r)*e)/l,n=y.fomatFloat(100*o,2)+"%-"+y.fomatFloat(100*a,2)+"%";$(".profit-value").text(n)}}),$(".support-value").on("blur",function(){console.log("支撑位");var t=$(".resistance-value").val(),e=$(".support-value").val();if(console.log(e,t),""==!e){console.log("wori");var r=$("#stratery-girding-num ").val(),o=$("#one-girding-free").val()/100,a=(t-e)/r,n=(a-(2*t+a)*o)/t,i=(a-(2*e+a)*o)/e,l=y.fomatFloat(100*n,2)+"%-"+y.fomatFloat(100*i,2)+"%";$(".profit-value").text(l),console.log(l)}})}}})})},Robot.prototype.listenClickStragerty=function(){$(".deal-strategy").each(function(t,e){var r=$(e);r.click(function(){r.addClass("active").siblings().removeClass("active")})})},Robot.prototype.listenSubmitRobot=function(){$("#btnComplete ").click(function(){console.log("dafasdf");var t=$(".set-risk-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$(".set-risk-strategy .strategy-title .curry").text();console.log(o);var a=$("#robot-account").find("option:selected").val(),n=$(".current-price .price").attr("total_money");console.log(n);var i=$(".strategy-parameters-top .resistance").text(),l=$(".strategy-parameters-top .support-level").text(),s=$(".strategy-parameters-top .girding-num").text(),c=$(".current-price .price").text(),u=$(".millisecond-value").val(),p=$(".mix-number .value ").val(),g=$(".max-number .value ").val();console.log("当前价:",c,"毫秒:",u,"最小数量:",p,"最大数量",g);var d=$(".strategy-parameters-below .deal-account").text(),f=$(".strategy-parameters-below .resistance").text(),v=$(".stopLoss .loss").val(),b=$(".warning .value").val(),m=$(".warninguser .active");console.log(m);for(var y=[],x=0;x<m.length;x++){var h=m[x];console.log(h);var k=$(h).text();console.log($.trim(k)),y+=$.trim(k)+"&"}xfzajax.post({url:"/deal/createrobot/",data:{trading_account:a,currency:e,market:r,trading_strategy:o,total_money:n,float_profit:0,realized_profit:0,total_profit:0,annual_yield:0,protection:1,status:0,run_status:1,current_price:c,orders_frequency:u,resistance:i,support_level:l,girding_num:s,procudere_fee:d,min_num:p,max_num:g,girding_profit:f,stop_price:v,warning_price:b,warning_account:y},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("添加机器人成功",function(){window.location.reload()})}})})},Robot.prototype.runRobotEvent=function(){$(".run-stop").click(function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=$(this).attr("run_status"),o=t.attr("status");console.log(e,r,o),0==r&&1==o?(r=1,o=0):1==r&&0==o?(r=0,o=1):2!=o&&3!=o||$(this).attr("disabled",!0),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:e,flag:o,run_status:r},traditional:!0,success:function(t){200===t.code?xfzalert.alertSuccess("机器人ID:"+e+" 运行成功",function(){window.location.reload()}):xfzalert.alertError("机器人ID: "+e+" 运行失败")}})})},Robot.prototype.setCurrentPrice=function(){$("#set-currenPrice").click(function(){var t=$(".set-price").val();""==!t?$(".current-price .price").text(t):xfzalert.alertError("请输入当前价")})},Robot.prototype.protectRelieve=function(){$(".protect-relieve").on("click",function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=t.attr("status"),o=t.attr("protect");console.log(e,r,o),1==r&&1==o?(r=2,o=0):2==r&&0==o?o=r=1:0==r&&1==o?(r=3,o=0):3==r&&0==o&&(r=0,o=1),console.log("status:"+r,"protect:"+o),xfzajax.post({url:"/deal/robot_protection/",data:{robot_id:e,flag:r,protect:o},success:function(t){console.log(t)}})})},Robot.prototype.editRobotEvent=function(){$("#btnNext1").click(function(){console.log("配置");var t=$(this).attr("robot_id");console.log("robotid",t);var e=$(".edit-mix-num").val(),r=$(".edit-max-numx").val(),o=$(".edit-stoploss").val(),a=$(".edit-waring").val(),n=$(".edit-orders-frequency").val();xfzajax.post({url:"/deal/showconfig/",data:{robot_id:t,min_num:e,max_num:r,stop_price:o,warning_price:a,orders_frequency:n},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("机器人配置成功",function(){window.location.reload()})}})})},Robot.prototype.oneStepRun=function(){$("#one-key-stop").click(function(){var t=$(this).parent().parent(),e=(t.attr("data-id"),$(this).attr("run_status")),r=t.attr("status");0==e&&1==r?(e=1,r=0):1==e&&0==r&&(e=0,r=1),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:"",flag:0},success:function(t){console.log(t)}})}),$("#one-key-run").click(function(){xfzajax.post({url:"/deal/startrobot/",data:{robot_id:"",flag:1},success:function(t){console.log(t)}})})},Robot.prototype.listenRightFlagEvent=function(){$("#btnNext").click(function(){console.log("right"),""==!$(".strategy-curry .currency").text()&&$(".strategy-curry").append('<img src="{% static \'images/1-1.png\' %}" alt="">')})},Robot.prototype.getUser=function(){$("#create-robot").click(function(){xfzajax.get({url:"/deal/waring_usrs/",success:function(t){if(200===t.code){console.log(t);var e=t.data,r=template("users-item",{users:e});$("#waring-users").append(r)}}})})},Robot.prototype.listenCurrencySelecctedEvent=function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":r,account_id:o},success:function(t){if(200===t.code){var e=t.data;console.log(e);var r=e.resistance,o=e.support_level,a=e.currency,n=e.last,i=e.market;$(".current-price .price").text(n),$(".account-details .currency").text(a),$(".account-details .market").text(i);var l=$("#stratery-girding-num ").val(),s=$("#one-girding-free").val(),c=(r-o)/l,u=(c-(2*r+c)*s)/r,p=(c-(2*o+c)*s)/o,g=self.fomatFloat(u,2)+"%-"+self.fomatFloat(p,2)+"%";$(".resistance-value").val(r),$(".support-value").val(o),$(".profit-value").text(g)}}})},Robot.prototype.submitTipsEvent=function(){var c=this;$(".stopLoss .loss").on("blur",function(){var t=$(".strategy-parameters-top .support-level").text(),e=$(".stopLoss .loss").val();console.log(t,e),t<e&&xfzalert.alertError("止损价必须低于支撑位")}),$(".max-number-value").on("blur",function(){var t=$(".max-number-value").val(),e=$(".account-details .currency").text().replace(/[^\d.]/g,""),r=$(".account-details .market").text().replace(/[^\d.]/g,"");console.log("currency:"+e,"market:"+r);var o=$(".support-value").val(),a=$(".resistance-value").val();console.log("支撑位"+o,"阻力位："+a);var n=$("#stratery-girding-num").val(),i=(parseInt(a)+parseInt(o))/2*t*n;console.log("市场价计算："+i);var l=t*n;console.log(l,"交易币种价格"),parseInt(r)<parseInt(i)&&xfzalert.alertError("账户市场币种余额不足"),parseInt(e)<parseInt(l)&&xfzalert.alertError("账户交易币种余额不足"),parseInt(r)<parseInt(i)&&parseInt(e)<parseInt(l)&&xfzalert.alertError("账户市场币种和交易币种余额不足")}),$(".resistance-value").on("blur",function(){var t=$(".resistance-value").val(),e=$(".current-price .price").text(),r=$(".support-value").val();if(""==!t)if(parseInt(t)<=parseInt(e))xfzalert.alertError("阻力位不得低于等于当前价");else{var o=$("#stratery-girding-num ").val(),a=$("#one-girding-free").val()/100,n=(t-r)/o,i=(n-(2*t+n)*a)/t,l=(n-(2*r+n)*a)/r,s=c.fomatFloat(100*i,2)+"%-"+c.fomatFloat(100*l,2)+"%";$(".profit-value").text(s)}})},Robot.prototype.websocketRobot=function(){var e=new WebSocket("ws://"+window.location.host+"/deal/webtask_stu/");e.onopen=function(){console.log("WebSocket open"),e.send("1")},e.onmessage=function(t){console.log(t),console.log("dfa")},e.onclose=function(t){console.log(t),e.close()}},Robot.prototype.robotYieldEvent=function(){xfzajax.post({url:"/deal/robot_yield/",success:function(t){console.log(t)}})},template.defaults.imports.fomat=function(t){return t.toFixed(2)},$(function(){(new Robot).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpcmRpbmcuanMiXSwibmFtZXMiOlsiR2lyZGluZyIsIlJvYm90Iiwic2VsZiIsInRoaXMiLCJyb2JvdFdyYXBwZXIiLCIkIiwidHJhZGluZ09uV3JhcHBlciIsInRyYWRpbmdTdHJhdGVneVdyYXBwZXIiLCJzZXRTdHJhdGVneVdyYXBwZXIiLCJzZXRSaXNrV3JhcHBlciIsInByb3RvdHlwZSIsInJ1biIsIm1vZGFsUnVuIiwibW9kYWxEYXRhQXJyYXkiLCJBcnJheSIsInN0ZXAxIiwic3RlcHQyIiwibW9hZGxEYXRhQ29udHJvbCIsIm1vZGFsQ2FsbGJhY2siLCJjb250cm9sUGFnZVRvZ2dsZSIsIm1vZGFsU2VsZWN0IiwiY3VycmVudFBhZ2VJbmRleCIsImRpcmVjdGlvbiIsImFycmF5TGVuZ3RoIiwibGVuZ3RoIiwidGV4dCIsInJlbW92ZUNsYXNzIiwidG9TdHJpbmciLCJhZGRDbGFzcyIsImh0bWwiLCJjbGljayIsInBhcnNlSW50IiwibW9kYWwiLCJvbiIsImFsZXJ0IiwibGlzdGVuQ2xpY2tSb2JvdEV2ZW50IiwibGlzdGVuQ2xvc2VSb2JvdEV2ZW50IiwibG9hZHN0ZXBFdmVudCIsImxpc3RlblRyYWRpbmdSb2JvdEV2ZW50IiwibGlzdGVuQ3JlYXRUcmFkaW5nRXZlbnQiLCJsaXN0ZW5wYXJhbWV0ZXJFdmVuIiwibGlzdGVuU3VibWl0Um9ib3QiLCJydW5Sb2JvdEV2ZW50IiwicHJvdGVjdFJlbGlldmUiLCJnZXRBY2NvdW50SW5mb0V2ZW50Iiwic2V0Q3VycmVudFByaWNlIiwib25lU3RlcFJ1biIsImVkaXRSb2JvdEV2ZW50IiwibGlzdGVuUmlnaHRGbGFnRXZlbnQiLCJnZXRVc2VyIiwic3VibWl0VGlwc0V2ZW50IiwiaW5pdFlzdGVwRXZlbnQiLCJzZXRTdGVwIiwibG9hZFN0ZXAiLCJzaXplIiwiY29sb3IiLCJzdGVwcyIsInRpdGxlIiwiYnRuUHJlIiwiYnRuTmV4dCIsInJvYm90RGF0YUFycmF5IiwibnVtIiwiY3JlYXRyb2JvdGNsaWNrIiwic2hvdyIsImNvbnNvbGUiLCJsb2ciLCJ1bmJpbmQiLCJoaWRlIiwicHJldlN0ZXAiLCJpIiwidHJhbnNhY3Rpb25DdXJyZW5jeSIsImZpbmQiLCJtYXJrZXR0aXRsZSIsInBhcmFtZXRlcnNjb250cm9sIiwicmVzaXN0YW5jZXZhbHVlIiwidmFsIiwic3VwcG9ydCIsImdyaWRudW1iZXIiLCJmcmVlIiwicHJvZml0X3ZhbHVlIiwiVGhleWFyZW9mdGVuIiwibWl4bnVtYmVyIiwibWF4bnVtYmVyIiwidGVzdCIsInhmemFsZXJ0IiwiYWxlcnRFcnJvciIsInNpYmxpbmdzIiwic3RyYXRlZ3l0aXRsZSIsInRyaW0iLCJuZXh0U3RlcCIsImVhY2giLCJrZXkiLCJ2YWx1ZSIsInRvZ2dsZUNsYXNzIiwiY2xvc2VCdG4iLCJyb2JvdF9pZCIsInBhcmVudCIsImF0dHIiLCJ4ZnphamF4IiwicG9zdCIsInVybCIsImRhdGEiLCJzdWNjZXNzIiwicmVzdWx0Iiwicm9ib3QiLCJjbG9zZSIsIm9wbmUiLCJ0cGwiLCJ0ZW1wbGF0ZSIsInJvYm90cyIsImFwcGVuZCIsInRyYWRpbmdjbG9zZWJ0biIsInRyYWRpbmdQYXJ0aWN1bGFycyIsInRyYWRpbmdTaGFkZSIsInRyYWRpbmdsb2FkaW5nIiwidHJhZGluZ2VuZGluZyIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwicGFyYW1ldGVyY29uZmlndXJhdGlvbiIsInBhcmFtZXRlcmNsb3NlYnRuIiwiZGVsZXRlcHJvcGVydHkiLCJmb21hdEZsb2F0IiwibiIsImYiLCJwYXJzZUZsb2F0IiwiaXNOYU4iLCJzIiwiTWF0aCIsInJvdW5kIiwicG93IiwicnMiLCJpbmRleE9mIiwiY2hhbmdlIiwic3RyciIsInNwbGl0IiwiY3VycnkiLCJtYXJrZXRfY3V1cnJlbmN5IiwiaWQiLCJjdXJyeS10aXRsZSIsIm1hcmtldC10aXRsZSIsImFjY291bnRfaWQiLCJyZXNpc3RhbmNlIiwic3VwcG9ydF9sZXZlbCIsImN1cnJlbmN5IiwibGFzdCIsIm1hcmtldCIsInRvdGFsX2N1cnJlbmN5IiwicmVwbGFjZSIsInRvdGFsX21hcmtldCIsImN1cnJlbmN5X3ByaWNlIiwidG90YWxfbW9uZXkiLCJOdW1iZXIiLCJ0b0ZpeGVkIiwiZ2lyZGluZyIsIm1peF9wcm9maXQiLCJtYXhfcHJpY2UiLCJwcm9maXQiLCJsaXN0ZW5DbGlja1N0cmFnZXJ0eSIsImluZGV4IiwiZWxlbWVudCIsImJ0biIsImN1cnJlbnkiLCJzdHJhdGVneSIsImFjY291bnQiLCJnaXJkaW5nX251bSIsImN1cnJlbl9wcmljZSIsIm1pbGxpc2Vjb25kIiwibWl4X251bSIsIm1heF9udW0iLCJnaXJkaW5nX3Byb2ZpdCIsInN0b3Bsb3NzIiwid2FyaW5nIiwidXNlckxpc3QiLCJ1c2VycyIsInVzZXIiLCJ0cmFkaW5nX2FjY291bnQiLCJ0cmFkaW5nX3N0cmF0ZWd5IiwiZmxvYXRfcHJvZml0IiwicmVhbGl6ZWRfcHJvZml0IiwidG90YWxfcHJvZml0IiwiYW5udWFsX3lpZWxkIiwicHJvdGVjdGlvbiIsInN0YXR1cyIsInJ1bl9zdGF0dXMiLCJjdXJyZW50X3ByaWNlIiwib3JkZXJzX2ZyZXF1ZW5jeSIsInByb2N1ZGVyZV9mZWUiLCJtaW5fbnVtIiwic3RvcF9wcmljZSIsIndhcm5pbmdfcHJpY2UiLCJ3YXJuaW5nX2FjY291bnQiLCJhbGVydFN1Y2Nlc3MiLCJ0ciIsImZsYWciLCJ0cmFkaXRpb25hbCIsInByaWNlIiwicHJvdGVjdCIsImdldCIsImxpc3RlbkN1cnJlbmN5U2VsZWNjdGVkRXZlbnQiLCJsb3NzIiwibWFya2V0X3ByaWNlIiwid2Vic29ja2V0Um9ib3QiLCJzb2NrZXQiLCJXZWJTb2NrZXQiLCJob3N0Iiwib25vcGVuIiwic2VuZCIsIm9ubWVzc2FnZSIsIm9uY2xvc2UiLCJlIiwicm9ib3RZaWVsZEV2ZW50IiwiZGVmYXVsdHMiLCJpbXBvcnRzIiwiZm9tYXQiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFdBb0hULFNBQVNDLFFBQ0wsSUFBSUMsRUFBT0MsS0FDWEQsRUFBS0Us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ICAgIHZhciBzZWxmID0gdGhpcztcclxuXHJcbn07XHJcblxyXG5HaXJkaW5nLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyBzZWxmLm1vZGFsUnVuKCk7XHJcbiAgICAvLyBzZWxmLmxpc3RlblN0ZXBzRXZlbnQoKVxyXG59O1xyXG5cclxuR2lyZGluZy5wcm90b3R5cGUubW9kYWxSdW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgbW9kYWxEYXRhQXJyYXkgPSBuZXcgQXJyYXkoc2VsZi5zdGVwMSwgc2VsZi5zdGVwdDIpO1xyXG4gICAgc2VsZi5tb2FkbERhdGFDb250cm9sKFwiI21vZGFsXCIsIG1vZGFsRGF0YUFycmF5LCBzZWxmLm1vZGFsQ2FsbGJhY2soKSlcclxufVxyXG4vKipcclxuICpcclxuICogQHBhcmFtIG1vZGFsU2VsZWN0IG1vZGFs6YCJ5oup56ym77yM5pys5L6L5Li64oCcI215TW9kYWzigJ1cclxuICogQHBhcmFtIG1vZGFsRGF0YUFycmF5IGh0bWzku6PnoIHlrZfnrKbkuLLmlbDnu4RcclxuICogQHBhcmFtIGN1cnJlbnRQYWdlSW5kZXgg5b2T5YmN6aG156CBXHJcbiAqIEBwYXJhbSBkaXJlY3Rpb24gMeihqOekuuS4i+S4gOmhteaWueWQke+8jC0x6KGo56S65LiK5LiA6aG15pa55ZCRXHJcbiAqL1xyXG5HaXJkaW5nLnByb3RvdHlwZS5jb250cm9sUGFnZVRvZ2dsZSA9IGZ1bmN0aW9uIChtb2RhbFNlbGVjdCwgbW9kYWxEYXRhQXJyYXksIGN1cnJlbnRQYWdlSW5kZXgsIGRpcmVjdGlvbikge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGFycmF5TGVuZ3RoID0gbW9kYWxEYXRhQXJyYXkubGVuZ3RoO1xyXG4gICAgaWYgKGFycmF5TGVuZ3RoIDw9IDEpXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgaWYgKGRpcmVjdGlvbiA9PSAxKSB7XHJcbiAgICAgICAgLy/lpoLmnpzlvZPliY3pobXmmK/lgJLmlbDnrKzkuozpobXvvIzliJnlsIbkuIvkuIDpobXorr7nva7kuLrlsL7pobVcclxuICAgICAgICBpZiAoY3VycmVudFBhZ2VJbmRleCA9PSBhcnJheUxlbmd0aCAtIDIpIHtcclxuICAgICAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIubmV4dC1wYWdlXCIpLnRleHQoXCLmj5DkuqRcIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL+WmguaenOW9k+WJjemhteaYr+mmlumhte+8jOa3u+WKoOS4iuS4gOmhtVxyXG4gICAgICAgIGlmIChjdXJyZW50UGFnZUluZGV4ID09IDAgJiYgYXJyYXlMZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICQobW9kYWxTZWxlY3QgKyBcIiBcIiArIFwiLnByZXZpb3VzLXBhZ2VcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8v5pu05o2ibW9kYWwtYm9keeWSjOmhteeggVxyXG4gICAgICAgICQobW9kYWxTZWxlY3QgKyBcIiBcIiArIFwiLnBhZ2UtaW5kZXhcIikudGV4dCgoKytjdXJyZW50UGFnZUluZGV4KS50b1N0cmluZygpKTtcclxuICAgICAgICAkKG1vZGFsU2VsZWN0ICsgXCIgXCIgKyBcIi5tb2RhbC1ib2R5XCIpLmh0bWwobW9kYWxEYXRhQXJyYXlbY3VycmVudFBhZ2VJbmRleF0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvL+WmguaenOW9k+WJjemhteaYr+WwvumhtVxyXG4gICAgICAgIGlmIChjdXJyZW50UGFnZUluZGV4ID09IGFycmF5TGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICAkKG1vZGFsU2VsZWN0ICsgXCIgXCIgKyBcIi5uZXh0LXBhZ2VcIikudGV4dChcIuS4i+S4gOmhtVwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v5aaC5p6c5b2T5YmN6aG15piv5q2j5pWw56ys5LqM6aG1LOWImeWwhuS4iuS4gOmhteiuvue9ruS4uummlumhtVxyXG4gICAgICAgIGlmIChjdXJyZW50UGFnZUluZGV4ID09IDEpIHtcclxuICAgICAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIucHJldmlvdXMtcGFnZVwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/mm7TmjaJtb2RhbC1ib2R55ZKM6aG156CBXHJcbiAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIucGFnZS1pbmRleFwiKS50ZXh0KCgtLWN1cnJlbnRQYWdlSW5kZXgpLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICQobW9kYWxTZWxlY3QgKyBcIiBcIiArIFwiLm1vZGFsLWJvZHlcIikuaHRtbChtb2RhbERhdGFBcnJheVtjdXJyZW50UGFnZUluZGV4XSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4vKipcclxuICpcclxuICogQHBhcmFtIG1vZGFsU2VsZWN0IG1vZGFs6YCJ5oup56ymXHJcbiAqIEBwYXJhbSBtb2RhbERhdGFBcnJheSBodG1s5Luj56CB5a2X56ym5Liy5pWw57uEXHJcbiAqIEBwYXJhbSBtb2RhbENhbGxiYWNrIG1vZGFs5Zue6LCD5Ye95pWwXHJcbiAqL1xyXG5HaXJkaW5nLnByb3RvdHlwZS5tb2FkbERhdGFDb250cm9sID0gZnVuY3Rpb24gKG1vZGFsU2VsZWN0LCBtb2RhbERhdGFBcnJheSwgbW9kYWxDYWxsYmFjaykge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgLy/liJ3lp4vljJbmqKHmgIHmoYbpppbpobXmlbDmja5cclxuICAgICQobW9kYWxTZWxlY3QgKyBcIiBcIiArIFwiLm1vZGFsLWJvZHlcIikuaHRtbChtb2RhbERhdGFBcnJheVswXSk7XHJcbiAgICBpZiAobW9kYWxEYXRhQXJyYXkubGVuZ3RoIDw9IDEpIHtcclxuICAgICAgICAkKG1vZGFsU2VsZWN0ICsgXCIgXCIgKyBcIi5uZXh0LXBhZ2VcIikudGV4dChcIuaPkOS6pFwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvL+eCueWHu+S4i+S4gOmhtVxyXG4gICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIubmV4dC1wYWdlXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL+iwg+eUqOWbnuiwg+WHveaVsFxyXG4gICAgICAgIHNlbGYubW9kYWxDYWxsYmFjaygpXHJcbiAgICAgICAgaWYgKCQodGhpcykudGV4dCgpID09IFwi5o+Q5LqkXCIpIHtcclxuICAgICAgICAgICAgJChtb2RhbFNlbGVjdCkubW9kYWwoJ2hpZGUnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL+iOt+WPluW9k+WJjemhteeggVxyXG4gICAgICAgIHZhciBjdXJyZW50UGFnZUluZGV4ID0gcGFyc2VJbnQoJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIucGFnZS1pbmRleFwiKS50ZXh0KCkpO1xyXG4gICAgICAgIHNlbGYuY29udHJvbFBhZ2VUb2dnbGUobW9kYWxTZWxlY3QsIG1vZGFsRGF0YUFycmF5LCBjdXJyZW50UGFnZUluZGV4LCAxKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8v54K55Ye75LiK5LiA6aG1XHJcbiAgICAkKG1vZGFsU2VsZWN0ICsgXCIgXCIgKyBcIi5wcmV2aW91cy1wYWdlXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL+iOt+WPluW9k+WJjemhteeggVxyXG4gICAgICAgIHZhciBjdXJyZW50UGFnZUluZGV4ID0gcGFyc2VJbnQoJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIucGFnZS1pbmRleFwiKS50ZXh0KCkpO1xyXG4gICAgICAgIGNvbnRyb2xQYWdlVG9nZ2xlKG1vZGFsU2VsZWN0LCBtb2RhbERhdGFBcnJheSwgY3VycmVudFBhZ2VJbmRleCwgLTEpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy/lhbPpl63mqKHmgIHmoYbml7bvvIzph43nva7kuLrpppbpobVcclxuICAgICQobW9kYWxTZWxlY3QpLm9uKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIucGFnZS1pbmRleFwiKS50ZXh0KCgwKS50b1N0cmluZygpKTtcclxuICAgICAgICBpZiAobW9kYWxEYXRhQXJyYXkubGVuZ3RoIDw9IDEpIHtcclxuICAgICAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIubmV4dC1wYWdlXCIpLnRleHQoXCLmj5DkuqRcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIubmV4dC1wYWdlXCIpLnRleHQoXCLkuIvkuIDpobVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQobW9kYWxTZWxlY3QgKyBcIiBcIiArIFwiLm1vZGFsLWJvZHlcIikuaHRtbChtb2RhbERhdGFBcnJheVswXSk7XHJcbiAgICAgICAgJChtb2RhbFNlbGVjdCArIFwiIFwiICsgXCIucHJldmlvdXMtcGFnZVwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgIH0pXHJcbn1cclxuXHJcbkdpcmRpbmcucHJvdG90eXBlLm1vZGFsQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBhbGVydChcIuaPkOS6pOaIkOWKn1wiKTtcclxufVxyXG5cclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGdpcmQgPSBuZXcgR2lyZGluZygpO1xyXG4gICAgZ2lyZC5ydW4oKTtcclxufSlcclxuXHJcblxyXG5mdW5jdGlvbiBSb2JvdCgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYucm9ib3RXcmFwcGVyID0gJCgnLnJvYm90LXdyYXBwZXInKTtcclxuICAgIHNlbGYudHJhZGluZ09uV3JhcHBlciA9ICQoJy50cmFkaW5nLW9uJyk7XHJcbiAgICBzZWxmLnRyYWRpbmdTdHJhdGVneVdyYXBwZXIgPSAkKCcudHJhZGluZy1zdHJhdGVneScpO1xyXG4gICAgc2VsZi5zZXRTdHJhdGVneVdyYXBwZXIgPSAkKCcuc2V0LXN0cmF0ZWd5Jyk7XHJcbiAgICBzZWxmLnNldFJpc2tXcmFwcGVyID0gJCgnLnNldC1yaXNrLXN0cmF0ZWd5Jyk7XHJcblxyXG5cclxufTtcclxuXHJcblJvYm90LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyBzZWxmLmluaXRZc3RlcEV2ZW50KCk7XHJcbiAgICBzZWxmLmxpc3RlbkNsaWNrUm9ib3RFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5DbG9zZVJvYm90RXZlbnQoKTtcclxuICAgIHNlbGYubG9hZHN0ZXBFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5UcmFkaW5nUm9ib3RFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5DcmVhdFRyYWRpbmdFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5wYXJhbWV0ZXJFdmVuKCk7XHJcbiAgICBzZWxmLmxpc3RlblN1Ym1pdFJvYm90KCk7XHJcbiAgICBzZWxmLnJ1blJvYm90RXZlbnQoKTtcclxuICAgIHNlbGYucHJvdGVjdFJlbGlldmUoKTtcclxuICAgIHNlbGYuZ2V0QWNjb3VudEluZm9FdmVudCgpO1xyXG4gICAgc2VsZi5zZXRDdXJyZW50UHJpY2UoKTtcclxuICAgIHNlbGYub25lU3RlcFJ1bigpO1xyXG4gICAgc2VsZi5lZGl0Um9ib3RFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5SaWdodEZsYWdFdmVudCgpO1xyXG4gICAgc2VsZi5nZXRVc2VyKCk7XHJcbiAgICBzZWxmLnN1Ym1pdFRpcHNFdmVudCgpO1xyXG4gICAgLy8gc2VsZi5yb2JvdFlpZWxkRXZlbnQoKTtcclxuICAgIC8vIHNlbGYuZ2V0Um9ib3RzSWQoKTtcclxuICAgIC8vIHNlbGYud2Vic29ja2V0Um9ib3QoKTtcclxuICAgIC8vIHNlbGYubGlzdGVuQ2xpY2tTdHJhZ2VydHkoKTtcclxuICAgIC8vIHNlbGYuZ2V0QWNjb3VudEluZm9FdmVudCgpO1xyXG5cclxufTtcclxuLyoqXHJcbiAqIOacuuWZqOS6uuatpemqpOWIneWni+WMllxyXG4gKi9cclxuUm9ib3QucHJvdG90eXBlLmluaXRZc3RlcEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy/moLnmja5qUXVlcnnpgInmi6nlmajmib7liLDpnIDopoHliqDovb15c3RlcOeahOWuueWZqFxyXG4vL2xvYWRTdGVwIOaWueazleWPr+S7peWIneWni+WMlnlzdGVwXHJcblxyXG4gICAgJChcIi55c3RlcFwiKS5zZXRTdGVwKDEpO1xyXG5cclxufTtcclxuUm9ib3QucHJvdG90eXBlLmxvYWRzdGVwRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAkKFwiLnlzdGVwXCIpLmxvYWRTdGVwKHtcclxuICAgICAgICBzaXplOiBcImxhcmdlXCIsXHJcbiAgICAgICAgY29sb3I6IFwiZ3JlZW5cIixcclxuICAgICAgICBzdGVwczogW3tcclxuICAgICAgICAgICAgdGl0bGU6IFwi6YCJ5oup5Lqk5piT5a+5XCIsXHJcblxyXG4gICAgICAgIH0sIHtcclxuICAgICAgICAgICAgdGl0bGU6IFwi6YCJ5oup5Lqk5piT562W55WlXCIsXHJcbiAgICAgICAgfSwge1xyXG4gICAgICAgICAgICB0aXRsZTogXCLorr7nva7nrZbnlaXlj4LmlbBcIixcclxuICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIuiuvue9rumjjumZqeetlueVpVwiLFxyXG4gICAgICAgIH0sXVxyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICog5py65Zmo5Lq65L+h5oGv5aGr5YaZXHJcbiAqL1xyXG5Sb2JvdC5wcm90b3R5cGUubGlzdGVuQ2xpY2tSb2JvdEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuXHJcbiAgICB2YXIgYnRuUHJlID0gJChcIiNidG5QcmVcIilcclxuICAgIHZhciBidG5OZXh0ID0gJChcIiNidG5OZXh0XCIpXHJcbiAgICB2YXIgcm9ib3REYXRhQXJyYXkgPSBuZXcgQXJyYXkoc2VsZi50cmFkaW5nT25XcmFwcGVyLCBzZWxmLnRyYWRpbmdTdHJhdGVneVdyYXBwZXIsIHNlbGYuc2V0U3RyYXRlZ3lXcmFwcGVyLCBzZWxmLnNldFJpc2tXcmFwcGVyKVxyXG4gICAgdmFyIG51bSA9IDA7XHJcbiAgICB2YXIgY3JlYXRyb2JvdGNsaWNrID0gMFxyXG4gICAgJCgnI2NyZWF0ZS1yb2JvdCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoY3JlYXRyb2JvdGNsaWNrID09IDApIHtcclxuICAgICAgICAgICAgc2VsZi5yb2JvdFdyYXBwZXIuc2hvdygpO1xyXG4gICAgICAgICAgICByb2JvdERhdGFBcnJheVtudW1dLnNob3coKVxyXG4gICAgICAgICAgICBjcmVhdHJvYm90Y2xpY2srK1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNyZWF0cm9ib3RjbGljaylcclxuICAgICAgICAgICAgc2VsZi5yb2JvdFdyYXBwZXIuc2hvdygpXHJcbiAgICAgICAgfVxyXG4gICAgICAgICQoXCIjYnRuUHJlXCIpLnVuYmluZCgpO1xyXG4gICAgICAgIGJ0blByZS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChudW0gPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgbnVtID0gMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG51bS0tO1xyXG4gICAgICAgICAgICAgICAgJCgnI2J0bk5leHQnKS5zaG93KCkudGV4dCgn5LiL5LiA5q2lJylcclxuICAgICAgICAgICAgICAgICQoJyNidG5Db21wbGV0ZScpLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL+i3s+i9rOWIsOS4iuS4gOS4quatpemqpFxyXG4gICAgICAgICAgICAkKFwiLnlzdGVwXCIpLnByZXZTdGVwKCk7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcm9ib3REYXRhQXJyYXkubGVuZ3RoOyBpKyspIHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAobnVtID09PSBpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcm9ib3REYXRhQXJyYXlbaV0uc2hvdygpXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJvYm90RGF0YUFycmF5W2ldLmhpZGUoKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIjYnRuTmV4dFwiKS51bmJpbmQoKTtcclxuICAgICAgICBidG5OZXh0LmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gaWYobnVtID09IDEpe1xyXG4gICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2cobnVtLFwi5omn6KGM5Ye95pWwXCIpXHJcbiAgICAgICAgICAgIC8vICAgICBzZWxmLmxpc3RlbkN1cnJlbmN5U2VsZWNjdGVkRXZlbnQoKTtcclxuICAgICAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICAgICAgdmFyIHRyYW5zYWN0aW9uQ3VycmVuY3kgPSAkKCcjY3VycnknKS5maW5kKFwiIG9wdGlvbjpzZWxlY3RlZFwiKS50ZXh0KCk7Ly/kuqTmmJPluIHnp41cclxuICAgICAgICAgICAgdmFyIG1hcmtldHRpdGxlID0gJCgnI21hcmtldCcpLmZpbmQoXCIgb3B0aW9uOnNlbGVjdGVkXCIpLnRleHQoKTsvL+S6pOaYk+W4guWculxyXG4gICAgICAgICAgICB2YXIgcGFyYW1ldGVyc2NvbnRyb2wgPSAkKCcucGFyYW1ldGVycy1jb250cm9sJykuZmluZChcIiBvcHRpb246c2VsZWN0ZWRcIikudGV4dCgpLy/kuqTmmJPotKbmiLdcclxuICAgICAgICAgICAgdmFyIHJlc2lzdGFuY2V2YWx1ZSA9ICQoJy5zdHJhdGVneS1wYXJhbWV0ZXJzIC50cmFkaW5nLXBhcmFtZXRlcnMgLnJlc2lzdGFuY2UtdmFsdWUnKS52YWwoKS8v6Zi75Yqb5YC8XHJcbiAgICAgICAgICAgIHZhciBzdXBwb3J0ID0gJCgnLnN1cHBvcnQtdmFsdWUnKS52YWwoKS8v5pSv5pKR5L2NXHJcbiAgICAgICAgICAgIHZhciBncmlkbnVtYmVyID0gJCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMgLnRyYWRpbmctcGFyYW1ldGVycyAuZ3JpZC1udW1iZXInKS52YWwoKS8v572R5qC85pWw6YePXHJcbiAgICAgICAgICAgIHZhciBmcmVlID0gJCgnI29uZS1naXJkaW5nLWZyZWUnKS52YWwoKVxyXG4gICAgICAgICAgICB2YXIgcHJvZml0X3ZhbHVlID0gJCgnLnByb2ZpdC12YWx1ZScpLnRleHQoKVxyXG4gICAgICAgICAgICB2YXIgVGhleWFyZW9mdGVuID0gJCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMgLnRyYWRpbmctcGFyYW1ldGVycyAubWlsbGlzZWNvbmQtdmFsdWUnKS52YWwoKS8v5oyC5Y2V6aKR546HXHJcbiAgICAgICAgICAgIHZhciBtaXhudW1iZXIgPSAkKCcuc3RyYXRlZ3ktcGFyYW1ldGVycyAubWl4LW51bWJlciAubWl4LW51bWJlci12YWx1ZSAgJykudmFsKCkvL+WNlee9keagvOacgOWwj+S6pOaYk+mHj1xyXG4gICAgICAgICAgICB2YXIgbWF4bnVtYmVyID0gJCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMgIC5tYXgtbnVtYmVyIC5tYXgtbnVtYmVyLXZhbHVlICcpLnZhbCgpLy/ljZXnvZHmoLzmnIDlpKfkuqTmmJPph49cclxuXHJcbiAgICAgICAgICAgIC8vIGFsZXJ0KCfor7fpgInmi6nkuqTmmJPluIHnp40v5Lqk5piT5biC5Zy6JylcclxuICAgICAgICAgICAgdmFyIHRleHQgPSB0cmFuc2FjdGlvbkN1cnJlbmN5ICsgJy8nICsgbWFya2V0dGl0bGVcclxuICAgICAgICAgICAgJCgnLnRyYWRpbmctc3RyYXRlZ3kgLnN0cmF0ZWd5LWN1cnJ5IC5jdXJyeScpLnRleHQodGV4dCk7XHJcbiAgICAgICAgICAgICQoJy5zZXQtc3RyYXRlZ3kgLnN0cmF0ZWd5LWN1cnJ5IC5jdXJyeScpLnRleHQodGV4dCk7XHJcbiAgICAgICAgICAgICQoJy5zZXQtcmlzay1zdHJhdGVneSAuc3RyYXRlZ3ktY3VycnkgLmN1cnJ5JykudGV4dCh0ZXh0KTtcclxuXHJcbiAgICAgICAgICAgICQoJy5zZXQtc3RyYXRlZ3ktdGl0bGUgLnN0cmF0ZWd5LXBhcmFtZXRlcnMtdG9wIC51c2VyJykudGV4dChwYXJhbWV0ZXJzY29udHJvbClcclxuXHJcbiAgICAgICAgICAgICQoJy5zZXQtcmlzay1zdHJhdGVneSAuc2V0LXN0cmF0ZWd5LXRpdGxlIC5yZXNpc3RhbmNlJykudGV4dChyZXNpc3RhbmNldmFsdWUpXHJcbiAgICAgICAgICAgICQoJy5zZXQtcmlzay1zdHJhdGVneSAuc2V0LXN0cmF0ZWd5LXRpdGxlIC5zdXBwb3J0LWxldmVsJykudGV4dChzdXBwb3J0KVxyXG4gICAgICAgICAgICAkKCcuc2V0LXJpc2stc3RyYXRlZ3kgLnNldC1zdHJhdGVneS10aXRsZSAuZ2lyZGluZy1udW0nKS50ZXh0KGdyaWRudW1iZXIpXHJcbiAgICAgICAgICAgICQoJy5zdHJhdGVneS1wYXJhbWV0ZXJzLWJlbG93IC5kZWFsLWFjY291bnQnKS50ZXh0KGZyZWUgKyAnJScpXHJcbiAgICAgICAgICAgICQoJy5zdHJhdGVneS1wYXJhbWV0ZXJzLWJlbG93IC5yZXNpc3RhbmNlJykudGV4dChwcm9maXRfdmFsdWUpXHJcbiAgICAgICAgICAgIHZhciBwYXR0MSA9IC9bXFx1NGUwMC1cXHU5ZmE1XS87XHJcbiAgICAgICAgICAgIGlmIChwYXR0MS50ZXN0KHRleHQpKSB7XHJcbiAgICAgICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi6K+36YCJ5oup5Lqk5piT5biB56eNL+S6pOaYk+WQjeensFwiKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgO1xyXG4gICAgICAgICAgICAvLyAkKCcudHJhZGluZy1zdHJhdGVneSAuc3RyYXRlZ3ktY3VycnkgLmN1cnJ5MScpLnRleHQobWFya2V0dGl0bGUpXHJcblxyXG4gICAgICAgICAgICB2YXIgc3RyYXRlZ3l0aXRsZSA9ICfnvZHmoLzkuqTmmJN2MS4wJ1xyXG4gICAgICAgICAgICAkKCcuc3RyYXRlZ3ktbmFtZSAuc3RyYXRlZ3ktYnV0dG9uIGJ1dHRvbicpLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAkKCcuc3RyYXRlZ3ktbmFtZSAuc3RyYXRlZ3ktYnV0dG9uIGJ1dHRvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpLnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0cmF0ZWd5dGl0bGUgPSAkKHRoaXMpLnRleHQoKTsvL+S6pOaYk+etlueVpVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coc3RyYXRlZ3l0aXRsZSk7XHJcbiAgICAgICAgICAgICAgICAkKCcuc2V0LXN0cmF0ZWd5IC5zdHJhdGVneS10aXRsZSAuc3RyYXRlZ3knKS50ZXh0KHN0cmF0ZWd5dGl0bGUpXHJcbiAgICAgICAgICAgICAgICAkKCcuc2V0LXJpc2stc3RyYXRlZ3kgLnN0cmF0ZWd5LXRpdGxlIC5jdXJyeScpLnRleHQoc3RyYXRlZ3l0aXRsZSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIGlmIChudW0gPj0gMikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHBhcmFtZXRlcnNjb250cm9sID09ICctLS3or7fpgInmi6ktLS0nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeGZ6YWxlcnQuYWxlcnRFcnJvcihcIuivt+mAieaLqeS6pOaYk+i0puaIt1wiKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgO1xyXG4gICAgICAgICAgICAgICAgaWYgKFRoZXlhcmVvZnRlbi50cmltKCkgPT0gJycpIHtcclxuICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi6K+36L6T5YWl5oyC5Y2V6aKR546HXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICA7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKG1peG51bWJlci50cmltKCkgPT0gJycpIHtcclxuICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi6K+36L6T5YWl5Y2V572R5qC85pyA5bCP5Lqk5piT5pWw6YePXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICA7XHJcbiAgICAgICAgICAgICAgICBpZiAobWF4bnVtYmVyLnRyaW0oKSA9PSAnJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmFsZXJ0RXJyb3IoXCLor7fovpPlhaXljZXnvZHmoLzmnIDlpKfkuqTmmJPmlbDph49cIilcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIDtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgJCgnI2J0bk5leHQnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKCcjYnRuQ29tcGxldGUnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICBudW0gPSAzO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbnVtKys7XHJcbiAgICAgICAgICAgICAgICAkKCcjYnRuTmV4dCcpLnRleHQoJ+S4i+S4gOatpScpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy/ot7PovazliLDkuIvkuIDkuKrmraXpqqRcclxuXHJcbiAgICAgICAgICAgICQoXCIueXN0ZXBcIikubmV4dFN0ZXAoKTtcclxuICAgICAgICAgICAgJC5lYWNoKHJvYm90RGF0YUFycmF5LCBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG51bSA9PT0ga2V5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUuc2hvdygpXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlLmhpZGUoKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICB9KTtcclxuICAgICAgICAkKCcud2FybmluZ3VzZXIgbGFiZWwnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ2J0bi1zdWNjZXNzJylcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufVxyXG5cclxuLyoqXHJcbiAqIOWFs+mXreacuuWZqOS6uuW8ueWHuuahhlxyXG4gKi9cclxuUm9ib3QucHJvdG90eXBlLmxpc3RlbkNsb3NlUm9ib3RFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBjbG9zZUJ0biA9ICQoJy5jbG9zZS1idG4nKTtcclxuICAgIHZhciByb2JvdFdyYXBwZXIgPSAkKCcucm9ib3Qtd3JhcHBlcicpO1xyXG4gICAgY2xvc2VCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJvYm90V3JhcHBlci5oaWRlKCk7XHJcblxyXG4gICAgfSlcclxufTtcclxuXHJcbi8qKlxyXG4gKiDmnLrlmajkurrkuqTmmJPor6bmg4VcclxuICovXHJcblJvYm90LnByb3RvdHlwZS5saXN0ZW5DcmVhdFRyYWRpbmdFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICQoJy5yb2JvdC1kZXRhaWxzJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJy50cmFkaW5nUGFydGljdWxhcnMnKS5zaG93KCk7XHJcbiAgICAgICAgJCgnLnRyYWRpbmdTaGFkZScpLnNob3coKTtcclxuICAgICAgICB2YXIgY3VycmVudGJ0biA9ICQodGhpcyk7XHJcbiAgICAgICAgdmFyIHRyID0gY3VycmVudGJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcclxuICAgICAgICB2YXIgcm9ib3RfaWQgPSB0ci5hdHRyKCdkYXRhLWlkJyk7XHJcbiAgICAgICAgJCgnI2J0bk5leHQxJykuYXR0cigncm9ib3RfaWQnLCByb2JvdF9pZClcclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9kZWFsL3Nob3d0cmFkZWRldGFpbC8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdyb2JvdF9pZCc6IHJvYm90X2lkXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJvYm90ID0gcmVzdWx0WydkYXRhJ11cclxuICAgICAgICAgICAgICAgIHZhciBjbG9zZSA9IHJvYm90WydjbG9zZWRfbnVtJ11cclxuICAgICAgICAgICAgICAgIHZhciBvcG5lID0gcm9ib3RbJ29wZW5fbnVtJ11cclxuICAgICAgICAgICAgICAgIC8vIHZhciBjbG9zZWRfaW5mbyA9IEpTT04ucGFyc2Uocm9ib3RbJ2Nsb3NlZF9pbmZvJ10pXHJcblxyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY2xvc2VkX2luZm8pXHJcbiAgICAgICAgICAgICAgICAkKCcuZGVhbC1vcGVuaW5nJykudGV4dChcIihcIiArIG9wbmUgKyBcIilcIilcclxuICAgICAgICAgICAgICAgICQoJy5kZWFsLWNvbXBsZXRlZCcpLnRleHQoXCIoXCIgKyBjbG9zZSArIFwiKVwiKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocm9ib3QpXHJcbiAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGVtcGxhdGUoJ3JvYm90LWRlYWwtZGV0YWlscycsIHsncm9ib3RzJzogcm9ib3R9KVxyXG4gICAgICAgICAgICAgICAgdmFyIGRldGFpbHMgPSAkKCcudHJhZGluZ1BhcnRpY3VsYXJzJylcclxuICAgICAgICAgICAgICAgIGRldGFpbHMuYXBwZW5kKHRwbClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuUm9ib3QucHJvdG90eXBlLmxpc3RlblRyYWRpbmdSb2JvdEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHRyYWRpbmdjbG9zZWJ0biA9ICQoJy50cmFkaW5nLWNsb3NlLWJ0bicpO1xyXG4gICAgdmFyIHRyYWRpbmdQYXJ0aWN1bGFycyA9ICQoJy50cmFkaW5nUGFydGljdWxhcnMnKTtcclxuICAgIHZhciB0cmFkaW5nU2hhZGUgPSAkKCcudHJhZGluZ1NoYWRlJylcclxuICAgIHZhciB0cmFkaW5nbG9hZGluZyA9ICQoJy50cmFkaW5nLWxvYWRpbmcnKVxyXG4gICAgdmFyIHRyYWRpbmdlbmRpbmcgPSAkKCcudHJhZGluZy1lbmRpbmcnKVxyXG4gICAgLy8gdmFyIHRyYWRpbmdjb250YWluZXIgPSAkKCcudHJhZGluZy1wYXJ0aWN1bGFycycpXHJcbiAgICAvLyB2YXIgdHJhZGluZ2VuZGluZ3RhYmxlID0gJCgnLnRyYWRpbmctZW5kaW5nLXRhYmxlJylcclxuICAgIHRyYWRpbmdjbG9zZWJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdHJhZGluZ1BhcnRpY3VsYXJzLmhpZGUoKTtcclxuICAgICAgICB0cmFkaW5nU2hhZGUuaGlkZSgpO1xyXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG5cclxuICAgIH0pXHJcbiAgICB0cmFkaW5nZW5kaW5nLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgJCgnLnRyYWRpbmctcGFydGljdWxhcnMnKS5oaWRlKCk7XHJcbiAgICAgICAgJCgnLnRyYWRpbmctZW5kaW5nLXRhYmxlJykuc2hvdygpO1xyXG4gICAgICAgIHRyYWRpbmdsb2FkaW5nLnRvZ2dsZUNsYXNzKCdncmVlbicpXHJcbiAgICAgICAgdHJhZGluZ2VuZGluZy50b2dnbGVDbGFzcygnZ3JlZW4nKVxyXG5cclxuICAgIH0pXHJcbiAgICB0cmFkaW5nbG9hZGluZy5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnLnRyYWRpbmctcGFydGljdWxhcnMnKS5zaG93KCk7XHJcbiAgICAgICAgJCgnLnRyYWRpbmctZW5kaW5nLXRhYmxlJykuaGlkZSgpO1xyXG4gICAgICAgIHRyYWRpbmdlbmRpbmcudG9nZ2xlQ2xhc3MoJ2dyZWVuJylcclxuICAgICAgICB0cmFkaW5nbG9hZGluZy50b2dnbGVDbGFzcygnZ3JlZW4nKVxyXG4gICAgfSlcclxuXHJcbn1cclxuXHJcblJvYm90LnByb3RvdHlwZS5saXN0ZW5wYXJhbWV0ZXJFdmVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHBhcmFtZXRlcmNvbmZpZ3VyYXRpb24gPSAkKCcucGFyYW1ldGVyLWNvbmZpZ3VyYXRpb24nKTtcclxuICAgIHZhciBwYXJhbWV0ZXJjbG9zZWJ0biA9ICQoJy5wYXJhbWV0ZXItY2xvc2UtYnRuJyk7XHJcbiAgICB2YXIgZGVsZXRlcHJvcGVydHkgPSAkKCcuYWxsb2NhdGlvbicpO1xyXG4gICAgdmFyIHRyYWRpbmdTaGFkZSA9ICQoJy50cmFkaW5nU2hhZGUnKVxyXG4gICAgZGVsZXRlcHJvcGVydHkuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHBhcmFtZXRlcmNvbmZpZ3VyYXRpb24uc2hvdygpO1xyXG4gICAgICAgIHRyYWRpbmdTaGFkZS5zaG93KCk7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRidG4gPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciB0ciA9IGN1cnJlbnRidG4ucGFyZW50KCkucGFyZW50KCk7XHJcbiAgICAgICAgdmFyIHJvYm90X2lkID0gdHIuYXR0cignZGF0YS1pZCcpO1xyXG4gICAgICAgICQoJyNidG5OZXh0MScpLmF0dHIoXCJyb2JvdF9pZFwiLCByb2JvdF9pZClcclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9kZWFsL3Nob3djb25maWdpbmZvLycsXHJcbiAgICAgICAgICAgICdkYXRhJzoge1xyXG4gICAgICAgICAgICAgICAgJ3JvYm90X2lkJzogcm9ib3RfaWQsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJvYm90ID0gcmVzdWx0WydkYXRhJ11cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJvYm90KVxyXG4gICAgICAgICAgICAgICAgLy8gdmFyIHVzZXJzID0gcmVzdWx0WydkYXRhJ11bJ3JvYm90J11bJ2ZpZWxkcyddWyd3YXJuaW5nX2FjY291bnQnXVxyXG4gICAgICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgICAgIC8vIHZhciB1c2VyID0gdXNlcnMuc3BsaXQoJyYnKVxyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codXNlcilcclxuICAgICAgICAgICAgICAgIHZhciB0cGwgPSB0ZW1wbGF0ZSgncm9ib3RzLWRldGFpbHMnLCB7J3JvYm90cyc6IHJvYm90fSlcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgcm9ib3RHcm91cCA9ICQoJyNwYXJhbWV0ZXItbGlzdC1jb250ZW50JylcclxuICAgICAgICAgICAgICAgIHJvYm90R3JvdXAuYXBwZW5kKHRwbClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuICAgIHBhcmFtZXRlcmNsb3NlYnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwYXJhbWV0ZXJjb25maWd1cmF0aW9uLmhpZGUoKTtcclxuICAgICAgICB0cmFkaW5nU2hhZGUuaGlkZSgpO1xyXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG4gICAgfSk7XHJcbiAgICAkKCcucHJldmVudC1idG4nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcGFyYW1ldGVyY29uZmlndXJhdGlvbi5oaWRlKCk7XHJcbiAgICAgICAgdHJhZGluZ1NoYWRlLmhpZGUoKTtcclxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcclxuICAgIH0pO1xyXG59XHJcblxyXG5Sb2JvdC5wcm90b3R5cGUuZm9tYXRGbG9hdCA9IGZ1bmN0aW9uIChudW0sIG4pIHtcclxuICAgIHZhciBmID0gcGFyc2VGbG9hdChudW0pO1xyXG4gICAgaWYgKGlzTmFOKGYpKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgZiA9IE1hdGgucm91bmQobnVtICogTWF0aC5wb3coMTAsIG4pKSAvIE1hdGgucG93KDEwLCBuKTsgLy8gbiDluYJcclxuICAgIHZhciBzID0gZi50b1N0cmluZygpO1xyXG4gICAgdmFyIHJzID0gcy5pbmRleE9mKCcuJyk7XHJcbiAgICAvL+WIpOWumuWmguaenOaYr+aVtOaVsO+8jOWinuWKoOWwj+aVsOeCueWGjeihpTBcclxuICAgIGlmIChycyA8IDApIHtcclxuICAgICAgICBycyA9IHMubGVuZ3RoO1xyXG4gICAgICAgIHMgKz0gJy4nO1xyXG4gICAgfVxyXG4gICAgd2hpbGUgKHMubGVuZ3RoIDw9IHJzICsgbikge1xyXG4gICAgICAgIHMgKz0gJzAnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHM7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDojrflj5botKbmiLfkv6Hmga9cclxuICovXHJcblJvYm90LnByb3RvdHlwZS5nZXRBY2NvdW50SW5mb0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgLy8gdmFyIHBhcmFudGVyc0dyb3VwID0gJCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMnKVxyXG4gICAgLy8gaWQgPSBwYXJhbnRlcnNHcm91cC5maW5kKFwic2VsZWN0WyduYW1lPSdhY2NvdW50J11cIikudmFsKClcclxuICAgIC8vIGNvbnNvbGUubG9nKGlkKVxyXG4gICAgJCgnI3JvYm90LWFjY291bnQnKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBwYXJhbnRlcnNHcm91cCA9ICQoJy5zZXQtc3RyYXRlZ3knKVxyXG4gICAgICAgIHZhciBjdXJyZW5jeSA9IHBhcmFudGVyc0dyb3VwLmZpbmQoJy5zdHJhdGVneS1jdXJyeSAuY3VycnknKS50ZXh0KClcclxuICAgICAgICB2YXIgc3RyciA9IGN1cnJlbmN5LnNwbGl0KCcvJylcclxuICAgICAgICB2YXIgY3VycnkgPSBzdHJyWzBdXHJcbiAgICAgICAgdmFyIG1hcmtldF9jdXVycmVuY3kgPSBzdHJyWzFdXHJcbiAgICAgICAgdmFyIGlkID0gJCgnI3JvYm90LWFjY291bnQnKS5maW5kKFwib3B0aW9uOnNlbGVjdGVkXCIpLnZhbCgpXHJcbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgJ3VybCc6ICcvZGVhbC9nZXRhY2NvdW50aW5mby8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdjdXJyeS10aXRsZSc6IGN1cnJ5LFxyXG4gICAgICAgICAgICAgICAgJ21hcmtldC10aXRsZSc6IG1hcmtldF9jdXVycmVuY3ksXHJcbiAgICAgICAgICAgICAgICAnYWNjb3VudF9pZCc6IGlkLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXN1bHRbJ2RhdGEnXVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc2lzdGFuY2UgPSBkYXRhWydyZXNpc3RhbmNlJ10gIC8v6Zi75Yqb5L2NXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1cHBvcnRfbGV2ZWwgPSBkYXRhWydzdXBwb3J0X2xldmVsJ10gLy/mlK/mkpHkvY1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVuY3kgPSBkYXRhWydjdXJyZW5jeSddICAvL+WPr+eUqFxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsYXN0ID0gZGF0YVsnbGFzdCddICAgIC8v5b2T5YmN5Lu3XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1hcmtldCA9IGRhdGFbJ21hcmtldCddICAvL+W4guWcuuS7t1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0b3RhbF9jdXJyZW5jeSA9IGRhdGFbJ3RvdGFsX2N1cnJlbmN5J10ucmVwbGFjZSgvW15cXGQuXS9nLCBcIlwiKVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRvdGFsX2N1cnJlbmN5KVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0b3RhbF9tYXJrZXQgPSBkYXRhWyd0b3RhbF9tYXJrZXQnXS5yZXBsYWNlKC9bXlxcZC5dL2csIFwiXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbmN5X3ByaWNlID0gbGFzdC5yZXBsYWNlKC9bXlxcZC5dL2csIFwiXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coY3VycmVuY3lfcHJpY2UpXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRvdGFsX21vbmV5ID0gTnVtYmVyKHRvdGFsX2N1cnJlbmN5KSAqIE51bWJlcihjdXJyZW5jeV9wcmljZSkgKyBOdW1iZXIodG90YWxfbWFya2V0KVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRvdGFsX21vbmV5KVxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5jdXJyZW50LXByaWNlIC5wcmljZScpLmF0dHIoXCJ0b3RhbF9tb25leVwiLHRvdGFsX21vbmV5LnRvRml4ZWQoMikgKyBtYXJrZXRfY3V1cnJlbmN5KVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHZhciB0b3RhbF9pbnB1dCA9IGN1cnJlbmN5L2xhc3RcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy/lvoDorr7nva7nrZbnlaXkuK3mj5LlhaXor7fmsYLliLDnmoTotKbmiLfkv6Hmga9cclxuICAgICAgICAgICAgICAgICAgICAkKCcuY3VycmVudC1wcmljZSAucHJpY2UnKS50ZXh0KGxhc3QpXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLmFjY291bnQtZGV0YWlscyAuY3VycmVuY3knKS50ZXh0KGN1cnJlbmN5KVxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5hY2NvdW50LWRldGFpbHMgLm1hcmtldCcpLnRleHQobWFya2V0KVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG51bSA9ICQoJyNzdHJhdGVyeS1naXJkaW5nLW51bSAnKS52YWwoKVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBmcmVlID0gJCgnI29uZS1naXJkaW5nLWZyZWUnKS52YWwoKSAvIDEwMFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZnJlZVwiLCBmcmVlKVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBnaXJkaW5nID0gKHJlc2lzdGFuY2UgLSBzdXBwb3J0X2xldmVsKSAvIG51bSAvL+WNlee9keagvFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Y2V572R5qC8XCIsIGdpcmRpbmcpXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtaXhfcHJvZml0ID0gW2dpcmRpbmcgLSAocmVzaXN0YW5jZSAqIDIgKyBnaXJkaW5nKSAqIGZyZWVdIC8gcmVzaXN0YW5jZVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5pyA5bCPXCIsIG1peF9wcm9maXQpXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1heF9wcmljZSA9IChnaXJkaW5nIC0gKHN1cHBvcnRfbGV2ZWwgKiAyICsgZ2lyZGluZykgKiBmcmVlKSAvIHN1cHBvcnRfbGV2ZWxcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuacgGRhXCIsIG1heF9wcmljZSlcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcHJvZml0ID0gc2VsZi5mb21hdEZsb2F0KG1peF9wcm9maXQgKiAxMDAsIDIpICsgJyUnICsgJy0nICsgc2VsZi5mb21hdEZsb2F0KG1heF9wcmljZSAqIDEwMCwgMikgKyAnJSdcclxuICAgICAgICAgICAgICAgICAgICAkKCcucmVzaXN0YW5jZS12YWx1ZScpLnZhbChyZXNpc3RhbmNlKVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcuc3VwcG9ydC12YWx1ZScpLnZhbChzdXBwb3J0X2xldmVsKVxyXG4gICAgICAgICAgICAgICAgICAgIC8v5Yik5pat6Zi75Yqb5L2N5LiN6IO95aSn5LqO5b2T5YmN5Lu3XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc2lzdGFuY2UgPD0gbGFzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi6Zi75Yqb5L2N5LiN6IO95bCP5LqO562J5LqO5b2T5YmN5Lu3XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5wcm9maXQtdmFsdWUnKS50ZXh0KHByb2ZpdClcclxuICAgICAgICAgICAgICAgICAgICAvL+e9keagvOaVsOmHj+eEpueCueS6i+S7tlxyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzdHJhdGVyeS1naXJkaW5nLW51bScpLm9uKCdibHVyJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISQoJyNzdHJhdGVyeS1naXJkaW5nLW51bScpLnZhbCgpID09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbnVtID0gJCgnI3N0cmF0ZXJ5LWdpcmRpbmctbnVtICcpLnZhbCgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJlZSA9ICQoJyNvbmUtZ2lyZGluZy1mcmVlJykudmFsKCkgLyAxMDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBnaXJkaW5nID0gKHJlc2lzdGFuY2UgLSBzdXBwb3J0X2xldmVsKSAvIG51bSAgICAgLy/ljZXnvZHmoLw977yI6Zi75Yqb5L2N5Lu35qC8LeaUr+aSkeS9jeS7t+agvO+8iS/nvZHmoLzmlbDph49cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtaXhfcHJvZml0ID0gKGdpcmRpbmcgLSAocmVzaXN0YW5jZSAqIDIgKyBnaXJkaW5nKSAqIGZyZWUpIC8gcmVzaXN0YW5jZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1heF9wcmljZSA9IChnaXJkaW5nIC0gKHN1cHBvcnRfbGV2ZWwgKiAyICsgZ2lyZGluZykgKiBmcmVlKSAvIHN1cHBvcnRfbGV2ZWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm9maXQgPSBzZWxmLmZvbWF0RmxvYXQobWl4X3Byb2ZpdCAqIDEwMCwgMikgKyAnJScgKyAnLScgKyBzZWxmLmZvbWF0RmxvYXQobWF4X3ByaWNlICogMTAwLCAyKSArICclJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLnByb2ZpdC12YWx1ZScpLnRleHQocHJvZml0KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAvL+S6pOaYk+aJi+e7rei0ueeEpueCueS6i+S7tlxyXG4gICAgICAgICAgICAgICAgICAgICQoJyNvbmUtZ2lyZGluZy1mcmVlJykub24oJ2JsdXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJCgnI29uZS1naXJkaW5nLWZyZWUnKS52YWwoKSA9PSAnJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG51bSA9ICQoJyNzdHJhdGVyeS1naXJkaW5nLW51bSAnKS52YWwoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZyZWUgPSAkKCcjb25lLWdpcmRpbmctZnJlZScpLnZhbCgpIC8gMTAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZ2lyZGluZyA9IChyZXNpc3RhbmNlIC0gc3VwcG9ydF9sZXZlbCkgLyBudW0gICAgIC8v5Y2V572R5qC8Pe+8iOmYu+WKm+S9jeS7t+agvC3mlK/mkpHkvY3ku7fmoLzvvIkv572R5qC85pWw6YePXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWl4X3Byb2ZpdCA9IChnaXJkaW5nIC0gKHJlc2lzdGFuY2UgKiAyICsgZ2lyZGluZykgKiBmcmVlKSAvIHJlc2lzdGFuY2VcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF4X3ByaWNlID0gKGdpcmRpbmcgLSAoc3VwcG9ydF9sZXZlbCAqIDIgKyBnaXJkaW5nKSAqIGZyZWUpIC8gc3VwcG9ydF9sZXZlbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByb2ZpdCA9IHNlbGYuZm9tYXRGbG9hdChtaXhfcHJvZml0ICogMTAwLCAyKSArICclJyArICctJyArIHNlbGYuZm9tYXRGbG9hdChtYXhfcHJpY2UgKiAxMDAsIDIpICsgJyUnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcucHJvZml0LXZhbHVlJykudGV4dChwcm9maXQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAvL+aUr+aSkeS9jeS9jeWkseWOu+eEpueCueS6i+S7tlxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5zdXBwb3J0LXZhbHVlJykub24oJ2JsdXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5pSv5pKR5L2NXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXNpc3RhbmNlID0gJCgnLnJlc2lzdGFuY2UtdmFsdWUnKS52YWwoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB2YXIgcHJpY2UgPSAkKCcuY3VycmVudC1wcmljZSAucHJpY2UnKS50ZXh0KClcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN1cHBvcnRfbGV2ZWwgPSAkKCcuc3VwcG9ydC12YWx1ZScpLnZhbCgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN1cHBvcnRfbGV2ZWwscmVzaXN0YW5jZSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc3VwcG9ydF9sZXZlbCA9PSAnJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ3b3JpXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbnVtID0gJCgnI3N0cmF0ZXJ5LWdpcmRpbmctbnVtICcpLnZhbCgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJlZSA9ICQoJyNvbmUtZ2lyZGluZy1mcmVlJykudmFsKCkgLyAxMDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBnaXJkaW5nID0gKHJlc2lzdGFuY2UgLSBzdXBwb3J0X2xldmVsKSAvIG51bSAgICAgLy/ljZXnvZHmoLw977yI6Zi75Yqb5L2N5Lu35qC8LeaUr+aSkeS9jeS7t+agvO+8iS/nvZHmoLzmlbDph49cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtaXhfcHJvZml0ID0gKGdpcmRpbmcgLSAocmVzaXN0YW5jZSAqIDIgKyBnaXJkaW5nKSAqIGZyZWUpIC8gcmVzaXN0YW5jZVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXhfcHJpY2UgPSAoZ2lyZGluZyAtIChzdXBwb3J0X2xldmVsICogMiArIGdpcmRpbmcpICogZnJlZSkgLyBzdXBwb3J0X2xldmVsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJvZml0ID0gc2VsZi5mb21hdEZsb2F0KG1peF9wcm9maXQgKiAxMDAsIDIpICsgJyUnICsgJy0nICsgc2VsZi5mb21hdEZsb2F0KG1heF9wcmljZSAqIDEwMCwgMikgKyAnJSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5wcm9maXQtdmFsdWUnKS50ZXh0KHByb2ZpdClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHByb2ZpdClcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG5cclxufVxyXG5cclxuLyoqXHJcbiAqIOeCueWHu+S6pOaYk+etlueVpeWIh+aNolxyXG4gKi9cclxuUm9ib3QucHJvdG90eXBlLmxpc3RlbkNsaWNrU3RyYWdlcnR5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGJ0bkxpc3QgPSAkKCcuZGVhbC1zdHJhdGVneScpXHJcbiAgICBidG5MaXN0LmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XHJcbiAgICAgICAgdmFyIGJ0biA9ICQoZWxlbWVudClcclxuICAgICAgICBidG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBidG4uYWRkQ2xhc3MoJ2FjdGl2ZScpLnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn1cclxuXHJcblxyXG4vKipcclxuICog5py65Zmo5Lq65o+Q5LqkXHJcbiAqL1xyXG5Sb2JvdC5wcm90b3R5cGUubGlzdGVuU3VibWl0Um9ib3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgYnRuQ29tcGxldGUgPSAkKCcjYnRuQ29tcGxldGUgJylcclxuICAgIC8v6I635Y+W5Lqk5piT5a+55pWw5o2uXHJcbiAgICBidG5Db21wbGV0ZS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJkYWZhc2RmXCIpXHJcbiAgICAgICAgdmFyIHJvYm90R3JvdXAgPSAkKCcuc2V0LXJpc2stc3RyYXRlZ3knKVxyXG4gICAgICAgIHZhciBjdXJyeSA9IHJvYm90R3JvdXAuZmluZCgnLnN0cmF0ZWd5LWN1cnJ5IC5jdXJyeScpLnRleHQoKSAgICAgICAgLy/kuqTmmJPlr7lcclxuICAgICAgICB2YXIgc3RyciA9IGN1cnJ5LnNwbGl0KCcvJylcclxuICAgICAgICB2YXIgY3VycmVueSA9IHN0cnJbMF1cclxuICAgICAgICB2YXIgbWFya2V0ID0gc3RyclsxXVxyXG5cclxuICAgICAgICAvLyB2YXIgYWNjb3VudCA9IHJvYm90R3JvdXAuZmluZCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMtdG9wIC51c2VyXCInKS50ZXh0KCkgLy/kuqTmmJPotKbmiLdcclxuICAgICAgICB2YXIgc3RyYXRlZ3kgPSAkKCcuc2V0LXJpc2stc3RyYXRlZ3kgLnN0cmF0ZWd5LXRpdGxlIC5jdXJyeScpLnRleHQoKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKHN0cmF0ZWd5KS8v5Lqk5piT562W55WlXHJcbiAgICAgICAgdmFyIGFjY291bnQgPSAkKCcjcm9ib3QtYWNjb3VudCcpLmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIikudmFsKClcclxuICAgICAgICB2YXIgdG90YWxfbW9uZXkgPSAkKCcuY3VycmVudC1wcmljZSAucHJpY2UnKS5hdHRyKCd0b3RhbF9tb25leScpXHJcbiAgICAgICAgY29uc29sZS5sb2codG90YWxfbW9uZXkpXHJcblxyXG4gICAgICAgIHZhciByZXNpc3RhbmNlID0gJCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMtdG9wIC5yZXNpc3RhbmNlJykudGV4dCgpLy/pmLvlipvkvY1cclxuICAgICAgICB2YXIgc3VwcG9ydCA9ICQoJy5zdHJhdGVneS1wYXJhbWV0ZXJzLXRvcCAuc3VwcG9ydC1sZXZlbCcpLnRleHQoKVxyXG4gICAgICAgIHZhciBnaXJkaW5nX251bSA9ICQoJy5zdHJhdGVneS1wYXJhbWV0ZXJzLXRvcCAuZ2lyZGluZy1udW0nKS50ZXh0KClcclxuICAgICAgICB2YXIgY3VycmVuX3ByaWNlID0gJCgnLmN1cnJlbnQtcHJpY2UgLnByaWNlJykudGV4dCgpXHJcbiAgICAgICAgdmFyIG1pbGxpc2Vjb25kID0gJCgnLm1pbGxpc2Vjb25kLXZhbHVlJykudmFsKClcclxuICAgICAgICB2YXIgbWl4X251bSA9ICQoJy5taXgtbnVtYmVyIC52YWx1ZSAnKS52YWwoKVxyXG4gICAgICAgIHZhciBtYXhfbnVtID0gJCgnLm1heC1udW1iZXIgLnZhbHVlICcpLnZhbCgpXHJcbiAgICAgICAgY29uc29sZS5sb2coJ+W9k+WJjeS7tzonLCBjdXJyZW5fcHJpY2UsICfmr6vnp5I6JywgbWlsbGlzZWNvbmQsICfmnIDlsI/mlbDph486JywgbWl4X251bSwgJ+acgOWkp+aVsOmHjycsIG1heF9udW0pXHJcblxyXG4gICAgICAgIHZhciBmcmVlID0gJCgnLnN0cmF0ZWd5LXBhcmFtZXRlcnMtYmVsb3cgLmRlYWwtYWNjb3VudCcpLnRleHQoKSAgLy/kuqTmmJPmiYvnu63otLlcclxuICAgICAgICB2YXIgZ2lyZGluZ19wcm9maXQgPSAkKCcuc3RyYXRlZ3ktcGFyYW1ldGVycy1iZWxvdyAucmVzaXN0YW5jZScpLnRleHQoKSAgLy/ljZXnvZHmoLzliKnmtqZcclxuICAgICAgICB2YXIgc3RvcGxvc3MgPSAkKCcuc3RvcExvc3MgLmxvc3MnKS52YWwoKVxyXG4gICAgICAgIHZhciB3YXJpbmcgPSAkKCcud2FybmluZyAudmFsdWUnKS52YWwoKVxyXG5cclxuICAgICAgICB2YXIgdXNlckxpc3QgPSAkKCcud2FybmluZ3VzZXIgLmFjdGl2ZScpXHJcbiAgICAgICAgY29uc29sZS5sb2codXNlckxpc3QpXHJcbiAgICAgICAgdmFyIHVzZXJzID0gW11cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVzZXJMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBlbGVtZW50ID0gdXNlckxpc3RbaV1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coZWxlbWVudClcclxuICAgICAgICAgICAgdmFyIHVzZXIgPSAkKGVsZW1lbnQpLnRleHQoKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygkLnRyaW0odXNlcikpXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHVzZXIpXHJcbiAgICAgICAgICAgIC8vIHVzZXJzLnB1c2godXNlcilcclxuICAgICAgICAgICAgdXNlcnMgKz0gJC50cmltKHVzZXIpICsgXCImXCJcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCfmraLmjZ/ku7cnLCBzdG9wbG9zcywgd2FyaW5nKVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCfnrZbnlaXvvJonLCBzdHJhdGVneSwgJ+i0puaIt++8micsIGFjY291bnQsICfpmLvlipvkvY06JywgcmVzaXN0YW5jZSwgJ+aUr+aSkeS9jTonLCBzdXBwb3J0LCAn572R5qC85pWw6YePOicsIGdpcmRpbmdfbnVtLCAn5Lqk5piT5omL57ut6LS5JywgZnJlZSwgJ+e9keagvOWIqea2picsIGdpcmRpbmdfcHJvZml0KVxyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL2RlYWwvY3JlYXRlcm9ib3QvJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAndHJhZGluZ19hY2NvdW50JzogYWNjb3VudCxcclxuICAgICAgICAgICAgICAgICdjdXJyZW5jeSc6IGN1cnJlbnksXHJcbiAgICAgICAgICAgICAgICAnbWFya2V0JzogbWFya2V0LFxyXG4gICAgICAgICAgICAgICAgJ3RyYWRpbmdfc3RyYXRlZ3knOiBzdHJhdGVneSxcclxuICAgICAgICAgICAgICAgICd0b3RhbF9tb25leSc6IHRvdGFsX21vbmV5LFxyXG4gICAgICAgICAgICAgICAgJ2Zsb2F0X3Byb2ZpdCc6IDAsXHJcbiAgICAgICAgICAgICAgICAncmVhbGl6ZWRfcHJvZml0JzogMCxcclxuICAgICAgICAgICAgICAgICd0b3RhbF9wcm9maXQnOiAwLFxyXG4gICAgICAgICAgICAgICAgJ2FubnVhbF95aWVsZCc6IDAsXHJcbiAgICAgICAgICAgICAgICAncHJvdGVjdGlvbic6IDEsXHJcbiAgICAgICAgICAgICAgICAnc3RhdHVzJzogMCxcclxuICAgICAgICAgICAgICAgICdydW5fc3RhdHVzJzogMSxcclxuICAgICAgICAgICAgICAgICdjdXJyZW50X3ByaWNlJzogY3VycmVuX3ByaWNlLFxyXG4gICAgICAgICAgICAgICAgJ29yZGVyc19mcmVxdWVuY3knOiBtaWxsaXNlY29uZCxcclxuICAgICAgICAgICAgICAgICdyZXNpc3RhbmNlJzogcmVzaXN0YW5jZSxcclxuICAgICAgICAgICAgICAgICdzdXBwb3J0X2xldmVsJzogc3VwcG9ydCxcclxuICAgICAgICAgICAgICAgICdnaXJkaW5nX251bSc6IGdpcmRpbmdfbnVtLFxyXG4gICAgICAgICAgICAgICAgJ3Byb2N1ZGVyZV9mZWUnOiBmcmVlLFxyXG4gICAgICAgICAgICAgICAgJ21pbl9udW0nOiBtaXhfbnVtLFxyXG4gICAgICAgICAgICAgICAgJ21heF9udW0nOiBtYXhfbnVtLFxyXG4gICAgICAgICAgICAgICAgJ2dpcmRpbmdfcHJvZml0JzogZ2lyZGluZ19wcm9maXQsXHJcbiAgICAgICAgICAgICAgICAnc3RvcF9wcmljZSc6IHN0b3Bsb3NzLFxyXG4gICAgICAgICAgICAgICAgJ3dhcm5pbmdfcHJpY2UnOiB3YXJpbmcsXHJcbiAgICAgICAgICAgICAgICAnd2FybmluZ19hY2NvdW50JzogdXNlcnMsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5hbGVydFN1Y2Nlc3MoJ+a3u+WKoOacuuWZqOS6uuaIkOWKnycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmnLrlmajkurrov5DooYxcclxuICovXHJcblJvYm90LnByb3RvdHlwZS5ydW5Sb2JvdEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICQoJy5ydW4tc3RvcCcpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudGJ0biA9ICQodGhpcyk7XHJcbiAgICAgICAgdmFyIHRyID0gY3VycmVudGJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcclxuICAgICAgICB2YXIgcm9ib3RfaWQgPSB0ci5hdHRyKCdkYXRhLWlkJyk7XHJcbiAgICAgICAgdmFyIHJ1bl9zdGF0dXMgPSAkKHRoaXMpLmF0dHIoJ3J1bl9zdGF0dXMnKVxyXG4gICAgICAgIHZhciBzdGF0dXMgPSB0ci5hdHRyKCdzdGF0dXMnKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKHJvYm90X2lkLCBydW5fc3RhdHVzLCBzdGF0dXMpXHJcbiAgICAgICAgaWYgKHJ1bl9zdGF0dXMgPT0gMCAmJiBzdGF0dXMgPT0gMSkge1xyXG4gICAgICAgICAgICBydW5fc3RhdHVzID0gMVxyXG4gICAgICAgICAgICBzdGF0dXMgPSAwXHJcbiAgICAgICAgfSBlbHNlIGlmIChydW5fc3RhdHVzID09IDEgJiYgc3RhdHVzID09IDApIHtcclxuICAgICAgICAgICAgcnVuX3N0YXR1cyA9IDBcclxuICAgICAgICAgICAgc3RhdHVzID0gMVxyXG4gICAgICAgIH0gZWxzZSBpZiAoc3RhdHVzID09IDIgfHwgc3RhdHVzID09IDMpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkaXNhYmxlZCcsIHRydWUpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9kZWFsL3N0YXJ0cm9ib3QvJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAncm9ib3RfaWQnOiByb2JvdF9pZCxcclxuICAgICAgICAgICAgICAgICdmbGFnJzogc3RhdHVzLFxyXG4gICAgICAgICAgICAgICAgJ3J1bl9zdGF0dXMnOiBydW5fc3RhdHVzLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0cmFkaXRpb25hbDogdHJ1ZSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5hbGVydFN1Y2Nlc3MoXCLmnLrlmajkurpJRDpcIiArIHJvYm90X2lkICsgXCIg6L+Q6KGM5oiQ5YqfXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeGZ6YWxlcnQuYWxlcnRFcnJvcihcIuacuuWZqOS6uklEOiBcIiArIHJvYm90X2lkICsgXCIg6L+Q6KGM5aSx6LSlXCIpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbn07XHJcblxyXG4vKipcclxuICog6K6+572u5b2T5YmN5Lu3XHJcbiAqL1xyXG5Sb2JvdC5wcm90b3R5cGUuc2V0Q3VycmVudFByaWNlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJCgnI3NldC1jdXJyZW5QcmljZScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcHJpY2UgPSAkKCcuc2V0LXByaWNlJykudmFsKClcclxuICAgICAgICBpZiAoIXByaWNlID09IFwiXCIpIHtcclxuICAgICAgICAgICAgJCgnLmN1cnJlbnQtcHJpY2UgLnByaWNlJykudGV4dChwcmljZSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi6K+36L6T5YWl5b2T5YmN5Lu3XCIpXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmnLrlmajkurrov5DooYx856aB5q2i5L+d5oqk6Kej6ZmkXHJcbiAqL1xyXG5Sb2JvdC5wcm90b3R5cGUucHJvdGVjdFJlbGlldmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAkKCcucHJvdGVjdC1yZWxpZXZlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJyZW50YnRuID0gJCh0aGlzKTtcclxuICAgICAgICB2YXIgdHIgPSBjdXJyZW50YnRuLnBhcmVudCgpLnBhcmVudCgpO1xyXG4gICAgICAgIHZhciByb2JvdF9pZCA9IHRyLmF0dHIoJ2RhdGEtaWQnKTtcclxuICAgICAgICB2YXIgc3RhdHVzID0gdHIuYXR0cignc3RhdHVzJyk7XHJcbiAgICAgICAgdmFyIHByb3RlY3QgPSB0ci5hdHRyKCdwcm90ZWN0JylcclxuICAgICAgICBjb25zb2xlLmxvZyhyb2JvdF9pZCwgc3RhdHVzLCBwcm90ZWN0KVxyXG5cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhmbGFnKVxyXG4gICAgICAgIC8vIHZhciBlbGVtZW50ID0gJCh0aGlzKS5zaWJsaW5ncygpXHJcbiAgICAgICAgLy8gdmFyIHJ1bmZsZyA9ICQoZWxlbWVudFswXSkudGV4dCgpXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCIqKioqXCIpXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cocnVuZmxnKVxyXG4gICAgICAgIC8vIGlmIChydW5mbGcgPT09ICfov5DooYwnIHx8IHJ1bmZsZyA9PT0gJ+i/kOihjCjkv53miqQpJykge1xyXG4gICAgICAgIC8vICAgICB2YXIgZmxnX3RleHQgPSAn6L+Q6KGMJ1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvLyBpZiAocnVuZmxnID09PSAn5YGc5q2iJyB8fCBydW5mbGcgPT09ICflgZzmraIo5L+d5oqkKScpIHtcclxuICAgICAgICAvLyAgICAgdmFyIGZsZ190ZXh0ID0gJ+WBnOatoidcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gaWYgKGZsYWcgPT09ICfkv53miqQnKSB7XHJcbiAgICAgICAgLy8gICAgIHZhciBuZXdfdmFsdWUgPSBydW5mbGcgKyAnKCcgKyBmbGFnICsgJyknXHJcbiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKG5ld192YWx1ZSlcclxuICAgICAgICAvLyAgICAgJChlbGVtZW50WzBdKS50ZXh0KG5ld192YWx1ZSlcclxuICAgICAgICAvLyAgICAgJCh0aGlzKS50ZXh0KCfop6PpmaQnKVxyXG4gICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICQoZWxlbWVudFswXSkudGV4dChmbGdfdGV4dClcclxuICAgICAgICAvLyAgICAgJCh0aGlzKS50ZXh0KCfkv53miqQnKVxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIGlmIChzdGF0dXMgPT0gMSAmJiBwcm90ZWN0ID09IDEpIHtcclxuICAgICAgICAgICAgc3RhdHVzID0gMlxyXG4gICAgICAgICAgICBwcm90ZWN0ID0gMFxyXG4gICAgICAgIH0gZWxzZSBpZiAoc3RhdHVzID09IDIgJiYgcHJvdGVjdCA9PSAwKSB7XHJcbiAgICAgICAgICAgIHN0YXR1cyA9IDFcclxuICAgICAgICAgICAgcHJvdGVjdCA9IDFcclxuICAgICAgICB9IGVsc2UgaWYgKHN0YXR1cyA9PSAwICYmIHByb3RlY3QgPT0gMSkge1xyXG4gICAgICAgICAgICBzdGF0dXMgPSAzXHJcbiAgICAgICAgICAgIHByb3RlY3QgPSAwXHJcbiAgICAgICAgICAgIC8vIHZhciBlbGVtZW50ID0gJCh0aGlzKS5zaWJsaW5ncygpWzBdO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlbGVtZW50KVxyXG4gICAgICAgICAgICAvLyAkKGVsZW1lbnQpLmF0dHIoJ2Rpc2FibGVkJywgdHJ1ZSlcclxuICAgICAgICB9IGVsc2UgaWYgKHN0YXR1cyA9PSAzICYmIHByb3RlY3QgPT0gMCkge1xyXG4gICAgICAgICAgICBzdGF0dXMgPSAwXHJcbiAgICAgICAgICAgIHByb3RlY3QgPSAxXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdzdGF0dXM6JyArIHN0YXR1cywgJ3Byb3RlY3Q6JyArIHByb3RlY3QpXHJcbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgJ3VybCc6IFwiL2RlYWwvcm9ib3RfcHJvdGVjdGlvbi9cIixcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAncm9ib3RfaWQnOiByb2JvdF9pZCxcclxuICAgICAgICAgICAgICAgICdmbGFnJzogc3RhdHVzLFxyXG4gICAgICAgICAgICAgICAgJ3Byb3RlY3QnOiBwcm90ZWN0LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcclxuICAgICAgICAgICAgICAgIC8vIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDkuIDplK7ov5DooYzlgZzmraJcclxuICovXHJcblxyXG4vKipcclxuICog5py65Zmo5Lq66YWN572u57yW6L6RXHJcbiAqL1xyXG5Sb2JvdC5wcm90b3R5cGUuZWRpdFJvYm90RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAkKFwiI2J0bk5leHQxXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIumFjee9rlwiKVxyXG5cclxuICAgICAgICB2YXIgcm9ib3RfaWQgPSAkKHRoaXMpLmF0dHIoXCJyb2JvdF9pZFwiKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicm9ib3RpZFwiLCByb2JvdF9pZClcclxuICAgICAgICB2YXIgbWl4X251bSA9ICQoJy5lZGl0LW1peC1udW0nKS52YWwoKVxyXG4gICAgICAgIHZhciBtYXhfbnVtID0gJCgnLmVkaXQtbWF4LW51bXgnKS52YWwoKVxyXG4gICAgICAgIHZhciBzdG9wbG9zcyA9ICQoJy5lZGl0LXN0b3Bsb3NzJykudmFsKClcclxuICAgICAgICB2YXIgd2FyaW5nID0gJCgnLmVkaXQtd2FyaW5nJykudmFsKClcclxuICAgICAgICB2YXIgb3JkZXJzX2ZyZXF1ZW5jeSA9ICQoJy5lZGl0LW9yZGVycy1mcmVxdWVuY3knKS52YWwoKVxyXG5cclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9kZWFsL3Nob3djb25maWcvJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAncm9ib3RfaWQnOiByb2JvdF9pZCxcclxuICAgICAgICAgICAgICAgICdtaW5fbnVtJzogbWl4X251bSxcclxuICAgICAgICAgICAgICAgICdtYXhfbnVtJzogbWF4X251bSxcclxuICAgICAgICAgICAgICAgICdzdG9wX3ByaWNlJzogc3RvcGxvc3MsXHJcbiAgICAgICAgICAgICAgICAnd2FybmluZ19wcmljZSc6IHdhcmluZyxcclxuICAgICAgICAgICAgICAgICdvcmRlcnNfZnJlcXVlbmN5Jzogb3JkZXJzX2ZyZXF1ZW5jeSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpXHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmFsZXJ0U3VjY2VzcyhcIuacuuWZqOS6uumFjee9ruaIkOWKn1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufVxyXG5Sb2JvdC5wcm90b3R5cGUub25lU3RlcFJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgICQoJyNvbmUta2V5LXN0b3AnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRidG4gPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciB0ciA9IGN1cnJlbnRidG4ucGFyZW50KCkucGFyZW50KCk7XHJcbiAgICAgICAgdmFyIHJvYm90X2lkID0gdHIuYXR0cignZGF0YS1pZCcpO1xyXG4gICAgICAgIHZhciBydW5fc3RhdHVzID0gJCh0aGlzKS5hdHRyKCdydW5fc3RhdHVzJylcclxuICAgICAgICB2YXIgc3RhdHVzID0gdHIuYXR0cignc3RhdHVzJylcclxuXHJcbiAgICAgICAgaWYgKHJ1bl9zdGF0dXMgPT0gMCAmJiBzdGF0dXMgPT0gMSkge1xyXG4gICAgICAgICAgICBydW5fc3RhdHVzID0gMVxyXG4gICAgICAgICAgICBzdGF0dXMgPSAwXHJcbiAgICAgICAgfSBlbHNlIGlmIChydW5fc3RhdHVzID09IDEgJiYgc3RhdHVzID09IDApIHtcclxuICAgICAgICAgICAgcnVuX3N0YXR1cyA9IDBcclxuICAgICAgICAgICAgc3RhdHVzID0gMVxyXG4gICAgICAgIH1cclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9kZWFsL3N0YXJ0cm9ib3QvJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAncm9ib3RfaWQnOiAnJyxcclxuICAgICAgICAgICAgICAgICdmbGFnJzogMCxcclxuXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgJCgnI29uZS1rZXktcnVuJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL2RlYWwvc3RhcnRyb2JvdC8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdyb2JvdF9pZCc6ICcnLFxyXG4gICAgICAgICAgICAgICAgJ2ZsYWcnOiAxLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiDlm77moIfloavlhplcclxuICovXHJcblJvYm90LnByb3RvdHlwZS5saXN0ZW5SaWdodEZsYWdFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICQoJyNidG5OZXh0JykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicmlnaHRcIilcclxuICAgICAgICB2YXIgY3VycmVuY3kgPSAkKCcuc3RyYXRlZ3ktY3VycnkgLmN1cnJlbmN5JykudGV4dCgpXHJcbiAgICAgICAgaWYgKCFjdXJyZW5jeSA9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICQoJy5zdHJhdGVneS1jdXJyeScpLmFwcGVuZChcIjxpbWcgc3JjPVxcXCJ7JSBzdGF0aWMgJ2ltYWdlcy8xLTEucG5nJyAlfVxcXCIgYWx0PVxcXCJcXFwiPlwiKVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcblJvYm90LnByb3RvdHlwZS5nZXRVc2VyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJCgnI2NyZWF0ZS1yb2JvdCcpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL2RlYWwvd2FyaW5nX3VzcnMvJyxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdXNlcnMgPSByZXN1bHRbJ2RhdGEnXVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0cGwgPSB0ZW1wbGF0ZSgndXNlcnMtaXRlbScsIHsndXNlcnMnOiB1c2Vyc30pXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXJzR3JvdXAgPSAkKCcjd2FyaW5nLXVzZXJzJylcclxuICAgICAgICAgICAgICAgICAgICB1c2Vyc0dyb3VwLmFwcGVuZCh0cGwpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbn1cclxuXHJcblJvYm90LnByb3RvdHlwZS5saXN0ZW5DdXJyZW5jeVNlbGVjY3RlZEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHBhcmFudGVyc0dyb3VwID0gJCgnLnNldC1zdHJhdGVneScpXHJcbiAgICB2YXIgY3VycmVuY3kgPSBwYXJhbnRlcnNHcm91cC5maW5kKCcuc3RyYXRlZ3ktY3VycnkgLmN1cnJ5JykudGV4dCgpXHJcbiAgICB2YXIgc3RyciA9IGN1cnJlbmN5LnNwbGl0KCcvJylcclxuICAgIHZhciBjdXJyeSA9IHN0cnJbMF1cclxuICAgIHZhciBtYXJrZXQgPSBzdHJyWzFdXHJcbiAgICB2YXIgaWQgPSAkKCcjcm9ib3QtYWNjb3VudCcpLmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIikudmFsKClcclxuICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgJ3VybCc6ICcvZGVhbC9nZXRhY2NvdW50aW5mby8nLFxyXG4gICAgICAgICdkYXRhJzoge1xyXG4gICAgICAgICAgICAnY3VycnktdGl0bGUnOiBjdXJyeSxcclxuICAgICAgICAgICAgJ21hcmtldC10aXRsZSc6IG1hcmtldCxcclxuICAgICAgICAgICAgJ2FjY291bnRfaWQnOiBpZCxcclxuICAgICAgICB9LFxyXG4gICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXN1bHRbJ2RhdGEnXVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgICAgICAgICAgIHZhciByZXNpc3RhbmNlID0gZGF0YVsncmVzaXN0YW5jZSddICAvL+mYu+WKm+S9jVxyXG4gICAgICAgICAgICAgICAgdmFyIHN1cHBvcnRfbGV2ZWwgPSBkYXRhWydzdXBwb3J0X2xldmVsJ10gLy/mlK/mkpHkvY1cclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW5jeSA9IGRhdGFbJ2N1cnJlbmN5J10gIC8v5Y+v55SoXHJcbiAgICAgICAgICAgICAgICB2YXIgbGFzdCA9IGRhdGFbJ2xhc3QnXSAgICAvL+W9k+WJjeS7t1xyXG4gICAgICAgICAgICAgICAgdmFyIG1hcmtldCA9IGRhdGFbJ21hcmtldCddICAvL+W4guWcuuS7t1xyXG4gICAgICAgICAgICAgICAgLy/lvoDorr7nva7nrZbnlaXkuK3mj5LlhaXor7fmsYLliLDnmoTotKbmiLfkv6Hmga9cclxuICAgICAgICAgICAgICAgICQoJy5jdXJyZW50LXByaWNlIC5wcmljZScpLnRleHQobGFzdClcclxuICAgICAgICAgICAgICAgICQoJy5hY2NvdW50LWRldGFpbHMgLmN1cnJlbmN5JykudGV4dChjdXJyZW5jeSlcclxuICAgICAgICAgICAgICAgICQoJy5hY2NvdW50LWRldGFpbHMgLm1hcmtldCcpLnRleHQobWFya2V0KVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgbnVtID0gJCgnI3N0cmF0ZXJ5LWdpcmRpbmctbnVtICcpLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB2YXIgZnJlZSA9ICQoJyNvbmUtZ2lyZGluZy1mcmVlJykudmFsKClcclxuICAgICAgICAgICAgICAgIHZhciBnaXJkaW5nID0gKHJlc2lzdGFuY2UgLSBzdXBwb3J0X2xldmVsKSAvIG51bVxyXG4gICAgICAgICAgICAgICAgdmFyIG1peF9wcm9maXQgPSAoZ2lyZGluZyAtIChyZXNpc3RhbmNlICogMiArIGdpcmRpbmcpICogZnJlZSkgLyByZXNpc3RhbmNlXHJcbiAgICAgICAgICAgICAgICB2YXIgbWF4X3ByaWNlID0gKGdpcmRpbmcgLSAoc3VwcG9ydF9sZXZlbCAqIDIgKyBnaXJkaW5nKSAqIGZyZWUpIC8gc3VwcG9ydF9sZXZlbFxyXG4gICAgICAgICAgICAgICAgdmFyIHByb2ZpdCA9IHNlbGYuZm9tYXRGbG9hdChtaXhfcHJvZml0LCAyKSArICclJyArICctJyArIHNlbGYuZm9tYXRGbG9hdChtYXhfcHJpY2UsIDIpICsgJyUnXHJcbiAgICAgICAgICAgICAgICAkKCcucmVzaXN0YW5jZS12YWx1ZScpLnZhbChyZXNpc3RhbmNlKVxyXG5cclxuICAgICAgICAgICAgICAgICQoJy5zdXBwb3J0LXZhbHVlJykudmFsKHN1cHBvcnRfbGV2ZWwpXHJcbiAgICAgICAgICAgICAgICAkKCcucHJvZml0LXZhbHVlJykudGV4dChwcm9maXQpXHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmnLrlmajkurrmj5DkuqQg5pWw5o2u5qCh6aqM5o+Q56S65pa55rOVXHJcbiAqIOWMheaLrOatouaNn+S7t+aPkOekulxyXG4gKiDljZXnvZHmoLzkuI3og73otoXov4fkuqTmmJPluIHnp43vvIzluILlnLrluIHnp43ku7fmoLzmj5DnpLpcclxuICovXHJcblJvYm90LnByb3RvdHlwZS5zdWJtaXRUaXBzRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvL+atouaNn+S7t+aPkOekulxyXG4gICAgJCgnLnN0b3BMb3NzIC5sb3NzJykub24oJ2JsdXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHN1cHBvcnQgPSAkKCcuc3RyYXRlZ3ktcGFyYW1ldGVycy10b3AgLnN1cHBvcnQtbGV2ZWwnKS50ZXh0KClcclxuICAgICAgICB2YXIgbG9zcyA9ICQoJy5zdG9wTG9zcyAubG9zcycpLnZhbCgpXHJcbiAgICAgICAgY29uc29sZS5sb2coc3VwcG9ydCxsb3NzKVxyXG4gICAgICAgIGlmIChsb3NzID4gc3VwcG9ydCkge1xyXG4gICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi5q2i5o2f5Lu35b+F6aG75L2O5LqO5pSv5pKR5L2NXCIpXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAvL+WNlee9keagvOacgOWkp+aPkOekulxyXG4gICAgJCgnLm1heC1udW1iZXItdmFsdWUnKS5vbignYmx1cicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgbWF4X251bSA9ICQoJy5tYXgtbnVtYmVyLXZhbHVlJykudmFsKClcclxuICAgICAgICB2YXIgY3VycmVuY3kgPSAkKCcuYWNjb3VudC1kZXRhaWxzIC5jdXJyZW5jeScpLnRleHQoKS5yZXBsYWNlKC9bXlxcZC5dL2csIFwiXCIpXHJcbiAgICAgICAgdmFyIG1hcmtldCA9ICQoJy5hY2NvdW50LWRldGFpbHMgLm1hcmtldCcpLnRleHQoKS5yZXBsYWNlKC9bXlxcZC5dL2csIFwiXCIpXHJcbiAgICAgICAgY29uc29sZS5sb2coJ2N1cnJlbmN5OicrY3VycmVuY3ksJ21hcmtldDonKyBtYXJrZXQpXHJcbiAgICAgICAgdmFyIHN1cHBvcnQgPSAkKCcuc3VwcG9ydC12YWx1ZScpLnZhbCgpXHJcbiAgICAgICAgdmFyIHJlc2lzdGFuY2UgPSAkKCcucmVzaXN0YW5jZS12YWx1ZScpLnZhbCgpXHJcbiAgICAgICAgY29uc29sZS5sb2coXCLmlK/mkpHkvY1cIitzdXBwb3J0LCBcIumYu+WKm+S9je+8mlwiK3Jlc2lzdGFuY2UpXHJcbiAgICAgICAgdmFyIG51bSA9ICQoJyNzdHJhdGVyeS1naXJkaW5nLW51bScpLnZhbCgpXHJcbiAgICAgICAgLy8gdmFyIGN1cnJlbnRfbWF0a2V0ID0gbWF4X251bSAqXHJcbiAgICAgICAgdmFyIGF2ZXJhZ2VfcHJpY2UgPSAocGFyc2VJbnQocmVzaXN0YW5jZSkgKyBwYXJzZUludChzdXBwb3J0KSkgLyAyXHJcbiAgICAgICAgdmFyIG1hcmtldF9wcmljZSA9IGF2ZXJhZ2VfcHJpY2UgKiBtYXhfbnVtICogbnVtICAvL+i0puaIt+W4guWculxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi5biC5Zy65Lu36K6h566X77yaXCIrbWFya2V0X3ByaWNlKVxyXG5cclxuICAgICAgICB2YXIgY3VycmVuY3lfcHJpY2UgPSBtYXhfbnVtICogbnVtXHJcbiAgICAgICAgY29uc29sZS5sb2coY3VycmVuY3lfcHJpY2UsXCLkuqTmmJPluIHnp43ku7fmoLxcIilcclxuICAgICAgICBpZiAocGFyc2VJbnQobWFya2V0KSA8IHBhcnNlSW50KG1hcmtldF9wcmljZSkpIHtcclxuICAgICAgICAgICAgeGZ6YWxlcnQuYWxlcnRFcnJvcihcIui0puaIt+W4guWcuuW4geenjeS9memineS4jei2s1wiKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocGFyc2VJbnQoY3VycmVuY3kpIDwgcGFyc2VJbnQoY3VycmVuY3lfcHJpY2UpKSB7XHJcbiAgICAgICAgICAgIHhmemFsZXJ0LmFsZXJ0RXJyb3IoXCLotKbmiLfkuqTmmJPluIHnp43kvZnpop3kuI3otrNcIilcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHBhcnNlSW50KG1hcmtldCkgPCBwYXJzZUludChtYXJrZXRfcHJpY2UpICYmIHBhcnNlSW50KGN1cnJlbmN5KSA8IHBhcnNlSW50KGN1cnJlbmN5X3ByaWNlKSkge1xyXG4gICAgICAgICAgICB4ZnphbGVydC5hbGVydEVycm9yKFwi6LSm5oi35biC5Zy65biB56eN5ZKM5Lqk5piT5biB56eN5L2Z6aKd5LiN6LazXCIpXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgJCgnLnJlc2lzdGFuY2UtdmFsdWUnKS5vbignYmx1cicsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgdmFyIHJlc2lzdGFuY2UgPSAkKCcucmVzaXN0YW5jZS12YWx1ZScpLnZhbCgpXHJcbiAgICAgICAgdmFyIHByaWNlID0gJCgnLmN1cnJlbnQtcHJpY2UgLnByaWNlJykudGV4dCgpXHJcbiAgICAgICAgdmFyIHN1cHBvcnRfbGV2ZWwgPSAkKCcuc3VwcG9ydC12YWx1ZScpLnZhbCgpXHJcbiAgICAgICAgaWYgKCFyZXNpc3RhbmNlID09ICcnKSB7XHJcbiAgICAgICAgICAgIGlmIChwYXJzZUludChyZXNpc3RhbmNlKSA8PSBwYXJzZUludChwcmljZSkpIHtcclxuICAgICAgICAgICAgICAgIHhmemFsZXJ0LmFsZXJ0RXJyb3IoXCLpmLvlipvkvY3kuI3lvpfkvY7kuo7nrYnkuo7lvZPliY3ku7dcIilcclxuICAgICAgICAgICAgICAgIC8vICQoJy5yZXNpc3RhbmNlLXZhbHVlJykuYWZ0ZXIoXCI8c3BhbiBjbGFzcz0nZXJyb3ItYWNjb3VudCc+6Zi75Yqb5L2N5LiN5b6X5L2O5LqO562J5LqO5b2T5YmN5Lu3PC9zcGFuPlwiKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFyIG51bSA9ICQoJyNzdHJhdGVyeS1naXJkaW5nLW51bSAnKS52YWwoKVxyXG4gICAgICAgICAgICAgICAgdmFyIGZyZWUgPSAkKCcjb25lLWdpcmRpbmctZnJlZScpLnZhbCgpIC8gMTAwXHJcbiAgICAgICAgICAgICAgICB2YXIgZ2lyZGluZyA9IChyZXNpc3RhbmNlIC0gc3VwcG9ydF9sZXZlbCkgLyBudW0gICAgIC8v5Y2V572R5qC8Pe+8iOmYu+WKm+S9jeS7t+agvC3mlK/mkpHkvY3ku7fmoLzvvIkv572R5qC85pWw6YePXHJcbiAgICAgICAgICAgICAgICB2YXIgbWl4X3Byb2ZpdCA9IChnaXJkaW5nIC0gKHJlc2lzdGFuY2UgKiAyICsgZ2lyZGluZykgKiBmcmVlKSAvIHJlc2lzdGFuY2VcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgbWF4X3ByaWNlID0gKGdpcmRpbmcgLSAoc3VwcG9ydF9sZXZlbCAqIDIgKyBnaXJkaW5nKSAqIGZyZWUpIC8gc3VwcG9ydF9sZXZlbFxyXG4gICAgICAgICAgICAgICAgdmFyIHByb2ZpdCA9IHNlbGYuZm9tYXRGbG9hdChtaXhfcHJvZml0ICogMTAwLCAyKSArICclJyArICctJyArIHNlbGYuZm9tYXRGbG9hdChtYXhfcHJpY2UgKiAxMDAsIDIpICsgJyUnXHJcbiAgICAgICAgICAgICAgICAkKCcucHJvZml0LXZhbHVlJykudGV4dChwcm9maXQpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbn1cclxuXHJcblxyXG5Sb2JvdC5wcm90b3R5cGUud2Vic29ja2V0Um9ib3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgc29ja2V0ID0gbmV3IFdlYlNvY2tldChcIndzOi8vXCIrd2luZG93LmxvY2F0aW9uLmhvc3QgKyBcIi9kZWFsL3dlYnRhc2tfc3R1L1wiKTtcclxuICAgIHNvY2tldC5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1dlYlNvY2tldCBvcGVuJyk7Ly/miJDlip/ov57mjqXkuIpXZWJzb2NrZXRcclxuICAgICAgICBzb2NrZXQuc2VuZCgnMScpOy8v5Y+R6YCB5pWw5o2u5Yiw5pyN5Yqh56uvXHJcbiAgICB9O1xyXG4gICAgc29ja2V0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnbWVzc2FnZTogJyArIGUuZGF0YSk7Ly/miZPljbDmnI3liqHnq6/ov5Tlm57nmoTmlbDmja5cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0eXBlb2YgKGUuZGF0YSkpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJkZmFcIilcclxuXHJcbiAgICB9O1xyXG4gICAgc29ja2V0Lm9uY2xvc2UgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xyXG4gICAgICAgIHNvY2tldC5jbG9zZSgpOyAvL+WFs+mXrVRDUOi/nuaOpVxyXG4gICAgfTtcclxuXHJcbn1cclxuXHJcblxyXG5Sb2JvdC5wcm90b3R5cGUucm9ib3RZaWVsZEV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpc1xyXG4gICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAndXJsJzogJy9kZWFsL3JvYm90X3lpZWxkLycsXHJcbiAgICAgICAgJ3N1Y2Nlc3MnOmZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9KVxyXG5cclxuXHJcblxyXG59XHJcblxyXG5cclxudGVtcGxhdGUuZGVmYXVsdHMuaW1wb3J0cy5mb21hdD0gZnVuY3Rpb24gKG4pIHtcclxuICAgICAgICByZXR1cm4gbi50b0ZpeGVkKDIpXHJcbiAgICB9XHJcblxyXG5cclxuXHJcbi8vIFJvYm90LnByb3RvdHlwZS5nZXRSb2JvdHNJZCA9IGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIHhmemFqYXguZ2V0KHtcclxuLy8gICAgICAgICAndXJsJzogJy9kZWFsL2dldF9yb2JvdGlkLycsXHJcbi8vICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbi8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KVxyXG4vLyB9XHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHJvYm90ID0gbmV3IFJvYm90KCk7XHJcbiAgICByb2JvdC5ydW4oKTtcclxuXHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXX0=
