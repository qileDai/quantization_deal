function Girding(){}function Robot(){var t=this;t.robotWrapper=$(".robot-wrapper"),t.tradingOnWrapper=$(".trading-on"),t.tradingStrategyWrapper=$(".trading-strategy"),t.setStrategyWrapper=$(".set-strategy"),t.setRiskWrapper=$(".set-risk-strategy")}Girding.prototype.run=function(){},Girding.prototype.modalRun=function(){var t=this,e=new Array(t.step1,t.stept2);t.moadlDataControl("#modal",e,t.modalCallback())},Girding.prototype.controlPageToggle=function(t,e,r,o){var a=e.length;a<=1||(1==o?(r==a-2&&$(t+" .next-page").text("提交"),0==r&&1<a&&$(t+" .previous-page").removeClass("hidden"),$(t+" .page-index").text((++r).toString())):(r==a-1&&$(t+" .next-page").text("下一页"),1==r&&$(t+" .previous-page").addClass("hidden"),$(t+" .page-index").text((--r).toString())),$(t+" .modal-body").html(e[r]))},Girding.prototype.moadlDataControl=function(e,r,t){var o=this;$(e+" .modal-body").html(r[0]),r.length<=1&&$(e+" .next-page").text("提交"),$(e+" .next-page").click(function(){if(o.modalCallback(),"提交"!=$(this).text()){var t=parseInt($(e+" .page-index").text());o.controlPageToggle(e,r,t,1)}else $(e).modal("hide")}),$(e+" .previous-page").click(function(){var t=parseInt($(e+" .page-index").text());controlPageToggle(e,r,t,-1)}),$(e).on("hidden.bs.modal",function(){$(e+" .page-index").text((0).toString()),r.length<=1?$(e+" .next-page").text("提交"):$(e+" .next-page").text("下一页"),$(e+" .modal-body").html(r[0]),$(e+" .previous-page").addClass("hidden")})},Girding.prototype.modalCallback=function(){alert("提交成功")},$(function(){(new Girding).run()}),Robot.prototype.run=function(){var t=this;t.listenClickRobotEvent(),t.listenCloseRobotEvent(),t.loadstepEvent(),t.listenTradingRobotEvent(),t.listenCreatTradingEvent(),t.listenparameterEven(),t.listenSubmitRobot(),t.runRobotEvent(),t.protectRelieve(),t.getAccountInfoEvent(),t.setCurrentPrice()},Robot.prototype.initYstepEvent=function(){$(".ystep").setStep(1)},Robot.prototype.loadstepEvent=function(){$(".ystep").loadStep({size:"large",color:"green",steps:[{title:"选择交易对"},{title:"选择交易策略"},{title:"设置策略参数"},{title:"设置风险策略"}]})},Robot.prototype.listenClickRobotEaaavent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),i=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),l=(i.length,0),o=0;$("#create-robot").on("click",function(){0==o?(t.robotWrapper.show(),i[l].show(),o++):(console.log(o),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){console.log("num"),l<=0?l=0:(l--,$("#btnNext").text("下一步")),$(".ystep").prevStep(),console.log("val",i);for(var t=0;t<i.length;t++)l===t?i[t].show():i[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),o=$(".strategy-parameters .trading-parameters .resistance-value").val(),a=$(".strategy-parameters .trading-parameters .support").val(),n=$(".strategy-parameters .trading-parameters .grid-number").val(),s=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(s),$(".set-strategy .strategy-curry .curry").text(s),$(".set-risk-strategy .strategy-curry .curry").text(s),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(o),$(".set-risk-strategy .set-strategy-title .support-level").text(a),$(".set-risk-strategy .set-strategy-title .girding-num").text(n);$(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),console.log("next"),2<=l?($("#btnNext").hide(),$("#btnComplete").show(),l=3):(l++,$("#btnNext").text("下一步")),$(".ystep").nextStep(),$.each(i,function(t,e){l===t?e.show():e.hide()})}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenClickRobotEvent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),i=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),l=0,o=0;$("#create-robot").on("click",function(){0==o?(t.robotWrapper.show(),i[l].show(),o++):(console.log(o),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){console.log("num"),l<=0?l=0:(l--,$("#btnNext").show().text("下一步"),$("#btnComplete").hide()),$(".ystep").prevStep(),console.log("val",i);for(var t=0;t<i.length;t++)l===t?i[t].show():i[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),o=$(".strategy-parameters .trading-parameters .resistance-value").val(),a=$(".strategy-parameters .trading-parameters .support").val(),n=$(".strategy-parameters .trading-parameters .grid-number").val(),s=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(s),$(".set-strategy .strategy-curry .curry").text(s),$(".set-risk-strategy .strategy-curry .curry").text(s),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(o),$(".set-risk-strategy .set-strategy-title .support-level").text(a),$(".set-risk-strategy .set-strategy-title .girding-num").text(n);$(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),2<=l?($("#btnNext").hide(),$("#btnComplete").show(),l=3):(l++,$("#btnNext").text("下一步")),$(".ystep").nextStep(),$.each(i,function(t,e){l===t?e.show():e.hide()})}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenCloseRobotEvent=function(){var t=$(".close-btn"),e=$(".robot-wrapper");t.click(function(){e.hide()})},Robot.prototype.listenCreatTradingEvent=function(){$(".robot-details").on("click",function(){$(".tradingParticulars").show(),$(".tradingShade").show();var t=$(this).parent().parent().attr("data-id");console.log(t),xfzajax.post({url:"/deal/showtradedetail/",data:{robot_id:t},success:function(t){var e=t.data;console.log(e);var r=template("",{robots:e});$(".tradingParticulars").append(r)}})})},Robot.prototype.listenTradingRobotEvent=function(){var t=$(".trading-close-btn"),e=$(".tradingParticulars"),r=$(".tradingShade"),o=$(".trading-loading"),a=$(".trading-ending"),n=$(".trading-container"),s=$(".trading-ending-table");t.click(function(){e.hide(),r.hide()}),a.click(function(){n.hide(),s.show(),o.toggleClass("green"),a.toggleClass("green")}),o.click(function(){n.show(),s.hide(),a.toggleClass("green"),o.toggleClass("green")})},Robot.prototype.listenparameterEven=function(){var e=$(".parameter-configuration"),t=$(".parameter-close-btn"),r=$(".allocation"),o=$(".tradingShade");r.click(function(){e.show(),o.show();var t=$(this).parent().parent().attr("data-id");xfzajax.post({url:"/deal/showconfiginfo/",data:{robot_id:t},success:function(t){var e=JSON.parse(t.data);console.log(e[0].fields);var r=e[0].fields,o=template("robots-details",{robot:r});console.log(r),$("#parameter-list-content").append(o)}})}),t.click(function(){e.hide(),o.hide()})},Robot.prototype.getAccountInfoEvent=function(){console.log("sfsfsfsdf"),$("#robot-account").change(function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":r,account_id:o},success:function(t){if(200===t.code){var e=t.data;console.log(e);var a=e.resistance,n=e.support_level,r=e.currency,o=e.last,s=e.market;$(".current-price .price").text(o),$(".account-details .currency").text(r),$(".account-details .market").text(s);var i=$("#stratery-girding-num ").val(),l=$("#one-girding-free").val(),c=(a-n)/i,g=(c-(2*a+c)*l)/a+"%-"+(c-(2*n+c)*l)/n+"%";$(".resistance-value").val(a),$(".support-value").val(n),$(".profit-value").text(g),$("#stratery-girding-num").on("blur",function(){if(""==!$("#stratery-girding-num").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val(),r=(a-n)/t,o=(r-(2*a+r)*e)/a+"%-"+(r-(2*n+r)*e)/n+"%";$(".profit-value").text(o)}}),$("#one-girding-free").on("blur",function(){if(""==!$("#one-girding-free").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val(),r=(a-n)/t,o=(r-(2*a+r)*e)/a+"%-"+(r-(2*n+r)*e)/n+"%";$(".profit-value").text(o)}}),$(".resistance-value").on("blur",function(){var t=$(".resistance-value").val(),e=$(".current-price .price").val();""==!t&&(t<=e?(console.log("sf"),$(".resistance-error-message .error").text("阻力位不得低于等于当前价")):$(".resistance-error-message .error").text(""))}),$("")}}})})},Robot.prototype.listenClickStragerty=function(){$(".deal-strategy").each(function(t,e){var r=$(e);r.click(function(){r.addClass("active").siblings().removeClass("active")})})},Robot.prototype.listenSubmitRobot=function(){$("#btnComplete ").click(function(){console.log("dafasdf");var t=$(".set-risk-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1];console.log("交易币种",e),console.log("交易市场",r);var o=$(".set-risk-strategy .strategy-title .curry").text();console.log(o);var a=$("#robot-account").find("option:selected").val(),n=$(".strategy-parameters-top .resistance").text(),s=$(".strategy-parameters-top .support-level").text(),i=$(".strategy-parameters-top .girding-num").text(),l=$(".current-price .price").text(),c=$(".millisecond-value").val(),g=$(".mix-number .value ").val(),p=$(".max-number .value ").val();console.log("当前价:",l,"毫秒:",c,"最小数量:",g,"最大数量",p);var u=$(".strategy-parameters-below .deal-account").text(),d=$(".strategy-parameters-below .resistance").text(),y=$(".stopLoss .loss").val(),v=$(".warning .value").val(),f=$(".warninguser .active");console.log(f);for(var b="",x=0;x<f.length;x++){var m=f[x];console.log(m),b+=$(m).text()+""}console.log(b),console.log("止损价",y,v),console.log("策略：",o,"账户：",a,"阻力位:",n,"支撑位:",s,"网格数量:",i,"交易手续费",u,"网格利润",d),xfzajax.post({url:"/deal/createrobot/",data:{trading_account:a,currency:e,market:r,trading_strategy:o,total_money:0,float_profit:0,realized_profit:0,total_profit:0,annual_yield:0,protection:2,status:0,current_price:l,orders_frequency:c,resistance:n,support_level:s,girding_num:i,procudere_fee:u,min_num:g,max_num:p,girding_profit:d,stop_price:y,warning_price:v,warning_account:b},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("添加机器人成功",function(){window.location.reload()})}})})},Robot.prototype.runRobotEvent=function(){$(".run-stop").click(function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=t.attr("statu");xfzajax.post({url:"/deal/startrobot/",data:{robot_id:e,flag:r},traditional:!0,success:function(t){200===t.code&&console.log(t)}})})},Robot.prototype.setCurrentPrice=function(){$("#set-currenPrice").click(function(){var t=$(".set-price").val();console.log(t),$(".current-price .price").text(t)})},Robot.prototype.protectRelieve=function(){$(".protect-relieve").on("click",function(){var t=$(this).parent().parent().attr("data-id");console.log(t);var e=$(this).text();console.log(e);var r=$(this).siblings(),o=$(r[0]).text();if(console.log("****"),console.log(o),"运行"===o||"运行(保护)"===o)var a="运行";if("停止"===o||"停止(保护)"===o)a="停止";if("保护"===e){var n=o+"("+e+")";console.log(n),$(r[0]).text(n),$(this).text("解除")}else $(r[0]).text(a),$(this).text("保护");xfzajax.post({url:"/deal/robot_protection/",data:{robot_id:t},success:function(t){console.log(t)}})})},$(function(){(new Robot).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
