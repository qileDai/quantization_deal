function Girding(){}function Robot(){var t=this;t.robotWrapper=$(".robot-wrapper"),t.tradingOnWrapper=$(".trading-on"),t.tradingStrategyWrapper=$(".trading-strategy"),t.setStrategyWrapper=$(".set-strategy"),t.setRiskWrapper=$(".set-risk-strategy")}Girding.prototype.run=function(){},Girding.prototype.modalRun=function(){var t=this,e=new Array(t.step1,t.stept2);t.moadlDataControl("#modal",e,t.modalCallback())},Girding.prototype.controlPageToggle=function(t,e,n,o){var r=e.length;r<=1||(1==o?(n==r-2&&$(t+" .next-page").text("提交"),0==n&&1<r&&$(t+" .previous-page").removeClass("hidden"),$(t+" .page-index").text((++n).toString())):(n==r-1&&$(t+" .next-page").text("下一页"),1==n&&$(t+" .previous-page").addClass("hidden"),$(t+" .page-index").text((--n).toString())),$(t+" .modal-body").html(e[n]))},Girding.prototype.moadlDataControl=function(e,n,t){var o=this;$(e+" .modal-body").html(n[0]),n.length<=1&&$(e+" .next-page").text("提交"),$(e+" .next-page").click(function(){if(o.modalCallback(),"提交"!=$(this).text()){var t=parseInt($(e+" .page-index").text());o.controlPageToggle(e,n,t,1)}else $(e).modal("hide")}),$(e+" .previous-page").click(function(){var t=parseInt($(e+" .page-index").text());controlPageToggle(e,n,t,-1)}),$(e).on("hidden.bs.modal",function(){$(e+" .page-index").text((0).toString()),n.length<=1?$(e+" .next-page").text("提交"):$(e+" .next-page").text("下一页"),$(e+" .modal-body").html(n[0]),$(e+" .previous-page").addClass("hidden")})},Girding.prototype.modalCallback=function(){alert("提交成功")},$(function(){(new Girding).run()}),Robot.prototype.run=function(){var t=this;t.listenClickRobotEvent(),t.listenCloseRobotEvent(),t.loadstepEvent(),t.listenTradingRobotEvent(),t.listenCreatTradingEvent(),t.listenparameterEven(),t.listenSubmitRobot()},Robot.prototype.initYstepEvent=function(){$(".ystep").setStep(1)},Robot.prototype.loadstepEvent=function(){$(".ystep").loadStep({size:"large",color:"green",steps:[{title:"选择交易对"},{title:"选择交易策略"},{title:"设置策略参数"},{title:"设置风险策略"}]})},Robot.prototype.listenClickRobotEaaavent=function(){var t=this,e=$("#btnPre"),n=$("#btnNext"),o=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),r=(o.length,0),i=0;$("#create-robot").on("click",function(){0==i?(t.robotWrapper.show(),o[r].show(),i++):(console.log(i),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){console.log("num"),r<=0?r=0:(r--,$("#btnNext").text("下一步")),$(".ystep").prevStep(),console.log("val",o);for(var t=0;t<o.length;t++)r===t?o[t].show():o[t].hide()}),$("#btnNext").unbind(),n.click(function(){console.log("next"),2<=r?($("#btnNext").text("完成"),r=3):(r++,$("#btnNext").text("下一步")),$(".ystep").nextStep(),$.each(o,function(t,e){r===t?e.show():e.hide()})}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenClickRobotEvent=function(){var t=this,e=$("#btnPre"),n=$("#btnNext"),o=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),r=(o.length,0),i=0;$("#create-robot").on("click",function(){0==i?(t.robotWrapper.show(),o[r].show(),i++):(console.log(i),t.robotWrapper.show()),console.log("open1"),$("#btnPre").unbind(),e.click(function(){console.log("num"),r<=0?r=0:(r--,$("#btnNext").text("下一步")),$(".ystep").prevStep(),console.log("val",o);for(var t=0;t<o.length;t++)r===t?o[t].show():o[t].hide()}),$("#btnNext").unbind(),n.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),n=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(n);$(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .curry").text(t)}),$(".set-strategy .strategy-curry .curry").text(t),$(".set-strategy .strategy-curry .curry1").text(e),console.log("next"),2<=r?($("#btnNext").text("完成"),r=3):(r++,$("#btnNext").text("下一步")),$(".ystep").nextStep(),$.each(o,function(t,e){r===t?e.show():e.hide()})}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenCloseRobotEvent=function(){var t=$(".close-btn"),e=$(".robot-wrapper");t.click(function(){e.hide()})},Robot.prototype.listenCreatTradingEvent=function(){$(".update-property").on("click",function(){$(".tradingParticulars").show(),$(".tradingShade").show()})},Robot.prototype.listenTradingRobotEvent=function(){var t=$(".trading-close-btn"),e=$(".tradingParticulars"),n=$(".tradingShade"),o=$(".trading-loading"),r=$(".trading-ending"),i=$(".trading-container"),a=$(".trading-ending-table");t.click(function(){e.hide(),n.hide()}),r.click(function(){i.hide(),a.show(),o.toggleClass("green"),r.toggleClass("green")}),o.click(function(){i.show(),a.hide(),r.toggleClass("green"),o.toggleClass("green")})},Robot.prototype.listenparameterEven=function(){var t=$(".parameter-configuration"),e=$(".parameter-close-btn"),n=$(".delete-property"),o=$(".tradingShade");n.click(function(){t.show(),o.show()}),e.click(function(){t.hide(),o.hide()})},Robot.prototype.getAccountInfoEvent=function(){var t=$(".strategy-parameters");id=t.find("select['name='account']").val(),console.log(id)},Robot.prototype.listenClickStragerty=function(){$(".deal-strategy").each(function(t,e){var n=$(e);n.click(function(){n.addClass("active").siblings().removeClass("active")})})},Robot.prototype.listenSubmitRobot=function(){$(".btnComplete ").click(function(){var t=$(".set-risk-strategy"),e=t.find(".curry").text().split("/"),n=e[0],o=e[1];console.log(n,o);var r=t.find(".strategy").text(),i=t.find(".account-value").text(),a=t.find(".resistance-value").text(),s=t.find(".support-value").text(),l=t.find(".girding-value").text(),c=t.find(".deal-account-free").text(),g=t.find(".girding-profit-value").text();console.log(r,i,a,s,l,c,g),xfzajax.post({url:"",data:{}})})},$(function(){(new Robot).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
