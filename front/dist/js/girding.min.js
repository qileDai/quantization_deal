function Girding(){}function Robot(){var t=this;t.robotWrapper=$(".robot-wrapper"),t.tradingOnWrapper=$(".trading-on"),t.tradingStrategyWrapper=$(".trading-strategy"),t.setStrategyWrapper=$(".set-strategy"),t.setRiskWrapper=$(".set-risk-strategy")}Girding.prototype.run=function(){},Girding.prototype.modalRun=function(){var t=this,e=new Array(t.step1,t.stept2);t.moadlDataControl("#modal",e,t.modalCallback())},Girding.prototype.controlPageToggle=function(t,e,r,o){var a=e.length;a<=1||(1==o?(r==a-2&&$(t+" .next-page").text("提交"),0==r&&1<a&&$(t+" .previous-page").removeClass("hidden"),$(t+" .page-index").text((++r).toString())):(r==a-1&&$(t+" .next-page").text("下一页"),1==r&&$(t+" .previous-page").addClass("hidden"),$(t+" .page-index").text((--r).toString())),$(t+" .modal-body").html(e[r]))},Girding.prototype.moadlDataControl=function(e,r,t){var o=this;$(e+" .modal-body").html(r[0]),r.length<=1&&$(e+" .next-page").text("提交"),$(e+" .next-page").click(function(){if(o.modalCallback(),"提交"!=$(this).text()){var t=parseInt($(e+" .page-index").text());o.controlPageToggle(e,r,t,1)}else $(e).modal("hide")}),$(e+" .previous-page").click(function(){var t=parseInt($(e+" .page-index").text());controlPageToggle(e,r,t,-1)}),$(e).on("hidden.bs.modal",function(){$(e+" .page-index").text((0).toString()),r.length<=1?$(e+" .next-page").text("提交"):$(e+" .next-page").text("下一页"),$(e+" .modal-body").html(r[0]),$(e+" .previous-page").addClass("hidden")})},Girding.prototype.modalCallback=function(){alert("提交成功")},$(function(){(new Girding).run()}),Robot.prototype.run=function(){var t=this;t.listenClickRobotEvent(),t.listenCloseRobotEvent(),t.loadstepEvent(),t.listenTradingRobotEvent(),t.listenCreatTradingEvent(),t.listenparameterEven(),t.listenSubmitRobot(),t.runRobotEvent(),t.protectRelieve(),t.getAccountInfoEvent(),t.setCurrentPrice(),t.oneStepRun(),t.editRobotEvent(),t.listenRightFlagEvent(),t.getUser()},Robot.prototype.initYstepEvent=function(){$(".ystep").setStep(1)},Robot.prototype.loadstepEvent=function(){$(".ystep").loadStep({size:"large",color:"green",steps:[{title:"选择交易对"},{title:"选择交易策略"},{title:"设置策略参数"},{title:"设置风险策略"}]})},Robot.prototype.listenClickRobotEvent=function(){var t=this,e=$("#btnPre"),r=$("#btnNext"),d=new Array(t.tradingOnWrapper,t.tradingStrategyWrapper,t.setStrategyWrapper,t.setRiskWrapper),g=0,o=0;$("#create-robot").on("click",function(){0==o?(t.robotWrapper.show(),d[g].show(),o++):(console.log(o),t.robotWrapper.show()),$("#btnPre").unbind(),e.click(function(){g<=0?g=0:(g--,$("#btnNext").show().text("下一步"),$("#btnComplete").hide()),$(".ystep").prevStep();for(var t=0;t<d.length;t++)g===t?d[t].show():d[t].hide()}),$("#btnNext").unbind(),r.click(function(){var t=$("#curry").find(" option:selected").text(),e=$("#market").find(" option:selected").text(),r=$(".parameters-control").find(" option:selected").text(),o=$(".strategy-parameters .trading-parameters .resistance-value").val(),a=$(".support-value").val(),n=$(".strategy-parameters .trading-parameters .grid-number").val(),i=$("#one-girding-free").val(),s=$(".profit-value").text(),l=$(".strategy-parameters .trading-parameters .millisecond-value").val(),c=$(".strategy-parameters .mix-number .mix-number-value  ").val(),u=$(".strategy-parameters  .max-number .max-number-value ").val(),p=t+"/"+e;$(".trading-strategy .strategy-curry .curry").text(p),$(".set-strategy .strategy-curry .curry").text(p),$(".set-risk-strategy .strategy-curry .curry").text(p),$(".set-strategy-title .strategy-parameters-top .user").text(r),$(".set-risk-strategy .set-strategy-title .resistance").text(o),$(".set-risk-strategy .set-strategy-title .support-level").text(a),$(".set-risk-strategy .set-strategy-title .girding-num").text(n),$(".strategy-parameters-below .deal-account").text(i+"%"),$(".strategy-parameters-below .resistance").text(s);if(/[\u4e00-\u9fa5]/.test(p))xfzalert.alertError("请选择交易币种/交易名称");else{if($(".strategy-name .strategy-button button").unbind(),$(".strategy-name .strategy-button button").on("click",function(){$(this).addClass("active").siblings().removeClass("active");var t=$(this).text();console.log(t),$(".set-strategy .strategy-title .strategy").text(t),$(".set-risk-strategy .strategy-title .curry").text(t)}),2<=g){if("---请选择---"==r)return void xfzalert.alertError("请选择交易账户");if(""==l.trim())return void xfzalert.alertError("请输入挂单频率");if(""==c.trim())return void xfzalert.alertError("请输入单网格最小交易数量");if(""==u.trim())return void xfzalert.alertError("请输入单网格最大交易数量");$("#btnNext").hide(),$("#btnComplete").show(),g=3}else g++,$("#btnNext").text("下一步");$(".ystep").nextStep(),$.each(d,function(t,e){g===t?e.show():e.hide()})}}),$(".warninguser label").on("click",function(){$(this).toggleClass("btn-success")})})},Robot.prototype.listenCloseRobotEvent=function(){var t=$(".close-btn"),e=$(".robot-wrapper");t.click(function(){e.hide()})},Robot.prototype.listenCreatTradingEvent=function(){$(".robot-details").on("click",function(){$(".tradingParticulars").show(),$(".tradingShade").show();var t=$(this).parent().parent().attr("data-id");$("#btnNext1").attr("robot_id",t),xfzajax.post({url:"/deal/showtradedetail/",data:{robot_id:t},success:function(t){var e=t.data,r=e.closed_num,o=e.open_num,a=JSON.parse(e.closed_info);console.log(a),$(".deal-opening").text("("+o+")"),$(".deal-completed").text("("+r+")"),console.log(e);var n=template("robot-deal-details",{robots:e},{closed_info:a});$(".tradingParticulars").append(n)}})})},Robot.prototype.listenTradingRobotEvent=function(){var t=$(".trading-close-btn"),e=$(".tradingParticulars"),r=$(".tradingShade"),o=$(".trading-loading"),a=$(".trading-ending");t.click(function(){e.hide(),r.hide(),window.location.reload()}),a.click(function(){$(".trading-particulars").hide(),$(".trading-ending-table").show(),o.toggleClass("green"),a.toggleClass("green")}),o.click(function(){$(".trading-particulars").show(),$(".trading-ending-table").hide(),a.toggleClass("green"),o.toggleClass("green")})},Robot.prototype.listenparameterEven=function(){var e=$(".parameter-configuration"),t=$(".parameter-close-btn"),r=$(".allocation"),o=$(".tradingShade");r.click(function(){e.show(),o.show();var t=$(this).parent().parent().attr("data-id");$("#btnNext1").attr("robot_id",t),xfzajax.post({url:"/deal/showconfiginfo/",data:{robot_id:t},success:function(t){var e=t.data,r=t.data.robot.fields.warning_account;console.log(e);var o=r.split("&");console.log(o);var a=template("robots-details",{robots:e},{users:o});$("#parameter-list-content").append(a)}})}),t.click(function(){e.hide(),o.hide(),window.location.reload()}),$(".prevent-btn").click(function(){e.hide(),o.hide(),window.location.reload()})},Robot.prototype.fomatFloat=function(t,e){var r=parseFloat(t);if(isNaN(r))return!1;var o=(r=Math.round(t*Math.pow(10,e))/Math.pow(10,e)).toString(),a=o.indexOf(".");for(a<0&&(a=o.length,o+=".");o.length<=a+e;)o+="0";return o},Robot.prototype.getAccountInfoEvent=function(){var v=this;$("#robot-account").change(function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":r,account_id:o},success:function(t){if(200===t.code){var e=t.data;console.log(e);var i=e.resistance,s=e.support_level,r=e.currency,o=e.last,a=e.market;$(".current-price .price").text(o),$(".account-details .currency").text(r),$(".account-details .market").text(a);var n=$("#stratery-girding-num ").val(),l=$("#one-girding-free").val(),c=(i-s)/n,u=(c-(2*i+c)*l)/i,p=(c-(2*s+c)*l)/s,d=v.fomatFloat(u,2)+"%-"+v.fomatFloat(p,2)+"%";$(".resistance-value").val(i),$(".support-value").val(s),$(".profit-value").text(d),$("#stratery-girding-num").on("blur",function(){if(""==!$("#stratery-girding-num").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val(),r=(i-s)/t,o=(r-(2*i+r)*e)/i,a=(r-(2*s+r)*e)/s,n=v.fomatFloat(o,2)+"%-"+v.fomatFloat(a,2)+"%";$(".profit-value").text(n)}}),$("#one-girding-free").on("blur",function(){if(""==!$("#one-girding-free").val()){var t=$("#stratery-girding-num ").val(),e=$("#one-girding-free").val(),r=(i-s)/t,o=(r-(2*i+r)*e)/i,a=(r-(2*s+r)*e)/s,n=v.fomatFloat(o,2)+"%-"+v.fomatFloat(a,2)+"%";$(".profit-value").text(n)}}),$(".resistance-value").on("blur",function(){var t=$(".resistance-value").val(),e=$(".current-price .price").val();""==!t&&(t<=e?(console.log("sf"),xfzalert.alertError("阻力位不得低于等于当前价")):$(".resistance-error-message .error").text(""))});var g=JSON.parse(e.users),f=template("users",{users:g});$("#waring-users").append(f)}}})})},Robot.prototype.listenClickStragerty=function(){$(".deal-strategy").each(function(t,e){var r=$(e);r.click(function(){r.addClass("active").siblings().removeClass("active")})})},Robot.prototype.listenSubmitRobot=function(){$("#btnComplete ").click(function(){console.log("dafasdf");var t=$(".set-risk-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1];console.log("交易币种",e),console.log("交易市场",r);var o=$(".set-risk-strategy .strategy-title .curry").text();console.log(o);var a=$("#robot-account").find("option:selected").val(),n=$(".strategy-parameters-top .resistance").text(),i=$(".strategy-parameters-top .support-level").text(),s=$(".strategy-parameters-top .girding-num").text(),l=$(".current-price .price").text(),c=$(".millisecond-value").val(),u=$(".mix-number .value ").val(),p=$(".max-number .value ").val();console.log("当前价:",l,"毫秒:",c,"最小数量:",u,"最大数量",p);var d=$(".strategy-parameters-below .deal-account").text(),g=$(".strategy-parameters-below .resistance").text(),f=$(".stopLoss .loss").val(),v=$(".warning .value").val(),y=$(".warninguser .active");console.log(y);for(var b=[],x=0;x<y.length;x++){var m=y[x];console.log(m);var h=$(m).text();console.log($.trim(h)),b+=$.trim(h)+"&"}console.log(b),console.log("止损价",f,v),console.log("策略：",o,"账户：",a,"阻力位:",n,"支撑位:",i,"网格数量:",s,"交易手续费",d,"网格利润",g),xfzajax.post({url:"/deal/createrobot/",data:{trading_account:a,currency:e,market:r,trading_strategy:o,total_money:0,float_profit:0,realized_profit:0,total_profit:0,annual_yield:0,protection:1,status:0,run_status:1,current_price:l,orders_frequency:c,resistance:n,support_level:i,girding_num:s,procudere_fee:d,min_num:u,max_num:p,girding_profit:g,stop_price:f,warning_price:v,warning_account:b},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("添加机器人成功",function(){window.location.reload()})}})})},Robot.prototype.runRobotEvent=function(){$(".run-stop").click(function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=$(this).attr("run_status"),o=t.attr("status");console.log(e,r,o),0==r&&1==o?(r=1,o=0):1==r&&0==o?(r=0,o=1):2!=o&&3!=o||$(this).attr("disabled",!0),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:e,flag:o,run_status:r},traditional:!0,success:function(t){200===t.code?xfzalert.alertSuccess("机器人ID:"+e+" 运行成功",function(){window.location.reload()}):xfzalert.alertError("机器人ID: "+e+" 运行失败")}})})},Robot.prototype.setCurrentPrice=function(){$("#set-currenPrice").click(function(){var t=$(".set-price").val();""==!t?$(".current-price .price").text(t):xfzalert.alertError("请输入当前价")})},Robot.prototype.protectRelieve=function(){$(".protect-relieve").on("click",function(){var t=$(this).parent().parent(),e=t.attr("data-id"),r=t.attr("status"),o=t.attr("protect");console.log(e,r,o),1==r&&1==o?(r=2,o=0):2==r&&0==o?o=r=1:0==r&&1==o?(r=3,o=0):3==r&&0==o&&(r=0,o=1),console.log("status:"+r,"protect:"+o),xfzajax.post({url:"/deal/robot_protection/",data:{robot_id:e,flag:r,protect:o},success:function(t){console.log(t)}})})},Robot.prototype.editRobotEvent=function(){$("#btnNext1").click(function(){console.log("配置");var t=$(this).attr("robot_id");console.log("robotid",t);var e=$(".edit-mix-num").val(),r=$(".edit-max-numx").val(),o=$(".edit-stoploss").val(),a=$(".edit-waring").val(),n=$(".edit-orders-frequency").val();xfzajax.post({url:"/deal/showconfig/",data:{robot_id:t,min_num:e,max_num:r,stop_price:o,warning_price:a,orders_frequency:n},success:function(t){console.log(t),200===t.code&&xfzalert.alertSuccess("机器人配置成功",function(){window.location.reload()})}})})},Robot.prototype.oneStepRun=function(){$("#one-key-stop").click(function(){var t=$(this).parent().parent(),e=(t.attr("data-id"),$(this).attr("run_status")),r=t.attr("status");0==e&&1==r?(e=1,r=0):1==e&&0==r&&(e=0,r=1),xfzajax.post({url:"/deal/startrobot/",data:{robot_id:"",flag:0},success:function(t){console.log(t)}})}),$("#one-key-run").click(function(){xfzajax.post({url:"/deal/startrobot/",data:{robot_id:"",flag:1},success:function(t){console.log(t)}})})},Robot.prototype.listenRightFlagEvent=function(){$("#btnNext").click(function(){console.log("right"),""==!$(".strategy-curry .currency").text()&&$(".strategy-curry").append('<img src="{% static \'images/1-1.png\' %}" alt="">')})},Robot.prototype.getUser=function(){$("#create-robot").click(function(){xfzajax.get({url:"/deal/waring_usrs/",success:function(t){if(200===t.code){console.log(t);var e=t.data;console.log(e);var r=template("users-item",{users:e});$("#waring-users").append(r)}}})})},Robot.prototype.listenCurrencySelecctedEvent=function(){var t=$(".set-strategy").find(".strategy-curry .curry").text().split("/"),e=t[0],r=t[1],o=$("#robot-account").find("option:selected").val();xfzajax.post({url:"/deal/getaccountinfo/",data:{"curry-title":e,"market-title":r,account_id:o},success:function(t){if(200===t.code){var e=t.data;console.log(e);var r=e.resistance,o=e.support_level,a=e.currency,n=e.last,i=e.market;$(".current-price .price").text(n),$(".account-details .currency").text(a),$(".account-details .market").text(i);var s=$("#stratery-girding-num ").val(),l=$("#one-girding-free").val(),c=(r-o)/s,u=(c-(2*r+c)*l)/r,p=(c-(2*o+c)*l)/o,d=self.fomatFloat(u,2)+"%-"+self.fomatFloat(p,2)+"%";$(".resistance-value").val(r),$(".support-value").val(o),$(".profit-value").text(d)}}})},$(function(){(new Robot).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
